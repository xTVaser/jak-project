
; ;; rigid-body-h
; (deftype rigid-body (structure)
;   ((mass                        float              :offset-assert 0)
;    (inv-mass                    float              :offset-assert 4)
;    (lin-momentum-damping-factor float              :offset-assert 8)
;    (ang-momentum-damping-factor float              :offset-assert 12)
;    (inertial-tensor             matrix     :inline :offset-assert 16)
;    (inv-inertial-tensor         matrix     :inline :offset-assert 80)
;    (cm-offset-joint             vector     :inline :offset-assert 144)
;    (position                    vector     :inline :offset-assert 160)
;    (rotation                    quaternion :inline :offset-assert 176)
;    (lin-momentum                vector     :inline :offset-assert 192)
;    (ang-momentum                vector     :inline :offset-assert 208)
;    (lin-velocity                vector     :inline :offset-assert 224)
;    (ang-velocity                vector     :inline :offset-assert 240)
;    (inv-i-world                 matrix     :inline :offset-assert 256)
;    (matrix                      matrix     :inline :offset-assert 320)
;    (force                       vector     :inline :offset-assert 384)
;    (torque                      vector     :inline :offset-assert 400)
;    (max-ang-momentum            float              :offset-assert 416)
;    (max-ang-velocity            float              :offset-assert 420)
;    )
;   :method-count-assert 23
;   :size-assert         #x1a8
;   :flag-assert         #x17000001a8
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; rigid-body-h
; (deftype rigid-body-control-point (structure)
;   ((local-pos vector :inline :offset-assert 0)
;    (world-pos vector :inline :offset-assert 16)
;    (velocity  vector :inline :offset-assert 32)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; ;; water-anim
; (deftype water-anim (water-vol)
;   ((~Tlook                int32  :offset-assert 212)
;    (~Tplay-ambient-sound? basic  :offset-assert 216)
;    )
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;; inherited inspect of water-vol
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; water-anim
; (deftype water-anim-look (structure)
;   ((skel-group         basic  :offset-assert 0)
;    (anim               int32  :offset-assert 4)
;    (ambient-sound-spec basic  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; ;; dark-eco-pool
; (deftype dark-eco-pool (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; rigid-body
; (deftype rigid-body-platform-constants (structure)
;   ((drag-factor           float   :offset-assert 0)
;    (buoyancy-factor       float   :offset-assert 4)
;    (max-buoyancy-depth    meters  :offset-assert 8)
;    (gravity-factor        float   :offset-assert 12)
;    (gravity               meters  :offset-assert 16)
;    (player-weight         meters  :offset-assert 20)
;    (player-bonk-factor    float   :offset-assert 24)
;    (player-dive-factor    float   :offset-assert 28)
;    (player-force-distance meters  :offset-assert 32)
;    (player-force-clamp    meters  :offset-assert 36)
;    (player-force-timeout  uint64  :offset-assert 40)
;    (explosion-force       meters  :offset-assert 48)
;    (linear-damping        float   :offset-assert 52)
;    (angular-damping       float   :offset-assert 56)
;    (control-point-count   int32   :offset-assert 60)
;    (mass                  float   :offset-assert 64)
;    (inertial-tensor-x     meters  :offset-assert 68)
;    (inertial-tensor-y     meters  :offset-assert 72)
;    (inertial-tensor-z     meters  :offset-assert 76)
;    (cm-joint-x            meters  :offset-assert 80)
;    (cm-joint-y            meters  :offset-assert 84)
;    (cm-joint-z            meters  :offset-assert 88)
;    (idle-distance         meters  :offset-assert 92)
;    (platform              basic   :offset-assert 96)
;    (sound-name            basic   :offset-assert 100)
;    )
;   :method-count-assert 9
;   :size-assert         #x68
;   :flag-assert         #x900000068
;   )

; ;; rigid-body
; (deftype rigid-body-control-point-inline-array (inline-array-class)
;   ((length           int32            :offset-assert 4)
;    (allocated-length int32            :offset-assert 8)
;    (data             UNKNOWN :dynamic :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; ;; rigid-body
; (deftype rigid-body-platform (process-drawable)
;   ((~Tinfo                  rigid-body-platform-constants         :offset-assert 176)
;    (~Trbody                 rigid-body                    :inline :offset-assert 192)
;    (~Tcontrol-point-array   basic                                 :offset-assert 616)
;    (~Tplayer-velocity       vector                        :inline :offset-assert 624)
;    (~Tplayer-velocity-prev  vector                        :inline :offset-assert 640)
;    (~Tplayer-force-position vector                        :inline :offset-assert 656)
;    (~Tplayer-force          vector                        :inline :offset-assert 672)
;    (~Tsim-time-remaining    float                                 :offset-assert 688)
;    (~Tfloat-height-offset   float                                 :offset-assert 692)
;    (~Tplayer-attack-id      int32                                 :offset-assert 696)
;    (~Tplayer-bonk-timeout   uint64                                :offset-assert 704)
;    (~Twater-anim            basic                                 :offset-assert 712)
;    (~Tplayer-contact        basic                                 :offset-assert 716)
;    (~Tplayer-impulse        basic                                 :offset-assert 720)
;    )
;   :method-count-assert 35
;   :size-assert         #x2d4
;   :flag-assert         #x23027002d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; nav-enemy-h
; (deftype nav-enemy-info (basic)
;   ((idle-anim                 int32     :offset-assert 4)
;    (walk-anim                 int32     :offset-assert 8)
;    (turn-anim                 int32     :offset-assert 12)
;    (notice-anim               int32     :offset-assert 16)
;    (run-anim                  int32     :offset-assert 20)
;    (jump-anim                 int32     :offset-assert 24)
;    (jump-land-anim            int32     :offset-assert 28)
;    (victory-anim              int32     :offset-assert 32)
;    (taunt-anim                int32     :offset-assert 36)
;    (die-anim                  int32     :offset-assert 40)
;    (neck-joint                int32     :offset-assert 44)
;    (player-look-at-joint      int32     :offset-assert 48)
;    (run-travel-speed          meters    :offset-assert 52)
;    (run-rotate-speed          deg       :offset-assert 56)
;    (run-acceleration          meters    :offset-assert 60)
;    (run-turn-time             useconds  :offset-assert 64)
;    (walk-travel-speed         meters    :offset-assert 72)
;    (walk-rotate-speed         deg       :offset-assert 76)
;    (walk-acceleration         meters    :offset-assert 80)
;    (walk-turn-time            useconds  :offset-assert 88)
;    (attack-shove-back         meters    :offset-assert 96)
;    (attack-shove-up           meters    :offset-assert 100)
;    (shadow-size               meters    :offset-assert 104)
;    (notice-nav-radius         meters    :offset-assert 108)
;    (nav-nearest-y-threshold   meters    :offset-assert 112)
;    (notice-distance           meters    :offset-assert 116)
;    (proximity-notice-distance meters    :offset-assert 120)
;    (stop-chase-distance       meters    :offset-assert 124)
;    (frustration-distance      meters    :offset-assert 128)
;    (frustration-time          uint64    :offset-assert 136)
;    (die-anim-hold-frame       float     :offset-assert 144)
;    (jump-anim-start-frame     float     :offset-assert 148)
;    (jump-land-anim-end-frame  float     :offset-assert 152)
;    (jump-height-min           meters    :offset-assert 156)
;    (jump-height-factor        float     :offset-assert 160)
;    (jump-start-anim-speed     float     :offset-assert 164)
;    (shadow-max-y              meters    :offset-assert 168)
;    (shadow-min-y              meters    :offset-assert 172)
;    (shadow-locus-dist         meters    :offset-assert 176)
;    (use-align                 basic     :offset-assert 180)
;    (draw-shadow               basic     :offset-assert 184)
;    (move-to-ground            basic     :offset-assert 188)
;    (hover-if-no-ground        basic     :offset-assert 192)
;    (use-momentum              basic     :offset-assert 196)
;    (use-flee                  basic     :offset-assert 200)
;    (use-proximity-notice      basic     :offset-assert 204)
;    (use-jump-blocked          basic     :offset-assert 208)
;    (use-jump-patrol           basic     :offset-assert 212)
;    (gnd-collide-with          uint64    :offset-assert 216)
;    (debug-draw-neck           basic     :offset-assert 224)
;    (debug-draw-jump           basic     :offset-assert 228)
;    )
;   :method-count-assert 9
;   :size-assert         #xe8
;   :flag-assert         #x9000000e8
;   )

; ;; nav-enemy-h
; (deftype nav-enemy (process-drawable)
;   ((~Thit-from-dir        vector     :inline :offset-assert 176)
;    (~Tevent-param-point   vector     :inline :offset-assert 192)
;    (~Tfrustration-point   vector     :inline :offset-assert 208)
;    (~Tjump-dest           vector     :inline :offset-assert 224)
;    (~Tjump-trajectory     trajectory :inline :offset-assert 240)
;    (~Tjump-time           uint64             :offset-assert 280)
;    (~Tnav-info            basic              :offset-assert 288)
;    (~Ttarget-speed        float              :offset-assert 292)
;    (~Tmomentum-speed      float              :offset-assert 296)
;    (~Tacceleration        float              :offset-assert 300)
;    (~Trotate-speed        float              :offset-assert 304)
;    (~Tturn-time           uint64             :offset-assert 312)
;    (~Tfrustration-time    uint64             :offset-assert 320)
;    (~Tspeed-scale         float              :offset-assert 328)
;    (~Tneck                basic              :offset-assert 332)
;    (~Treaction-time       uint64             :offset-assert 336)
;    (~Tnotice-time         uint64             :offset-assert 344)
;    (~Tstate-timeout       uint64             :offset-assert 352)
;    (~Tfree-time           uint64             :offset-assert 360)
;    (~Ttouch-time          uint64             :offset-assert 368)
;    (~Tnav-enemy-flags     uint32             :offset-assert 376)
;    (~Tincomming-attack-id uint64             :offset-assert 384)
;    (~Tjump-return-state   basic              :offset-assert 392)
;    (~Trand-gen            basic              :offset-assert 396)
;    )
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; baseplat
; (deftype baseplat (process-drawable)
;   ((~Tsmush     smush-control :inline :offset-assert 176)
;    (~Tbasetrans vector        :inline :offset-assert 208)
;    (~Tbouncing  basic                 :offset-assert 224)
;    )
;   :method-count-assert 27
;   :size-assert         #xe4
;   :flag-assert         #x1b008000e4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; baseplat
; (deftype eco-door (process-drawable)
;   ((~Tspeed          float           :offset-assert 176)
;    (~Topen-distance  float           :offset-assert 180)
;    (~Tclose-distance float           :offset-assert 184)
;    (~Tout-dir        vector  :inline :offset-assert 192)
;    (~Topen-sound     uint128         :offset-assert 208)
;    (~Tclose-sound    uint128         :offset-assert 224)
;    (~Tstate-actor    basic           :offset-assert 240)
;    (~Tflags          int32           :offset-assert 244)
;    (~Tlocked         basic           :offset-assert 248)
;    (~Tauto-close     basic           :offset-assert 252)
;    (~Tone-way        basic           :offset-assert 256)
;    )
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; basebutton
; (deftype basebutton (process-drawable)
;   ((~Tdown?             basic              :offset-assert 176)
;    (~Tspawned-by-other? basic              :offset-assert 180)
;    (~Tmove-to?          basic              :offset-assert 184)
;    (~Tnotify-actor      basic              :offset-assert 188)
;    (~Ttimeout           float              :offset-assert 192)
;    (~Tbutton-id         int32              :offset-assert 196)
;    (~Tevent-going-down  basic              :offset-assert 200)
;    (~Tevent-down        basic              :offset-assert 204)
;    (~Tevent-going-up    basic              :offset-assert 208)
;    (~Tevent-up          basic              :offset-assert 212)
;    (~Tanim-speed        float              :offset-assert 216)
;    (~Tmove-to-pos       vector     :inline :offset-assert 224)
;    (~Tmove-to-quat      quaternion :inline :offset-assert 240)
;    )
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; ;; basebutton
; (deftype warp-gate (process-drawable)
;   ((~Tlevel      basic  :offset-assert 176)
;    (~Tlevel-slot int32  :offset-assert 180)
;    (~Tmin-slot   int32  :offset-assert 184)
;    (~Tmax-slot   int32  :offset-assert 188)
;    )
;   :method-count-assert 24
;   :size-assert         #xc0
;   :flag-assert         #x18005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

; ;; tippy
; (deftype tippy (structure)
;   ((axis       vector     :inline :offset-assert 0)
;    (angle      float              :offset-assert 16)
;    (orig       quaternion :inline :offset-assert 32)
;    (dist-ratio float              :offset-assert 48)
;    (damping    float              :offset-assert 52)
;    (1-damping  float              :offset-assert 56)
;    )
;   :method-count-assert 11
;   :size-assert         #x3c
;   :flag-assert         #xb0000003c
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; ;; joint-exploder
; (deftype joint-exploder-tuning (structure)
;   ((explosion                   uint64         :offset-assert 0)
;    (duration                    uint64         :offset-assert 8)
;    (gravity                     float          :offset-assert 16)
;    (rot-speed                   float          :offset-assert 20)
;    (fountain-rand-transv-lo     vector :inline :offset-assert 32)
;    (fountain-rand-transv-hi     vector :inline :offset-assert 48)
;    (away-from-focal-pt          vector :inline :offset-assert 32)
;    (away-from-rand-transv-xz-lo float          :offset-assert 48)
;    (away-from-rand-transv-xz-hi float          :offset-assert 52)
;    (away-from-rand-transv-y-lo  float          :offset-assert 56)
;    (away-from-rand-transv-y-hi  float          :offset-assert 60)
;    )
;   :method-count-assert 9
;   :size-assert         #x40
;   :flag-assert         #x900000040
;   )

; ;; joint-exploder
; (deftype joint-exploder-static-joint-params (structure)
;   ((joint-index        int16  :offset-assert 0)
;    (parent-joint-index int16  :offset-assert 2)
;    )
;   :method-count-assert 9
;   :size-assert         #x4
;   :flag-assert         #x900000004
;   )

; ;; joint-exploder
; (deftype joint-exploder-static-params (basic)
;   ((joints basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; joint-exploder
; (deftype joint-exploder-joint (structure)
;   ((next        int16          :offset-assert 0)
;    (prev        int16          :offset-assert 2)
;    (joint-index int16          :offset-assert 4)
;    (rspeed      float          :offset-assert 8)
;    (mat         matrix :inline :offset-assert 16)
;    (rmat        matrix :inline :offset-assert 80)
;    (transv      vector :inline :offset-assert 144)
;    (prev-pos    vector :inline :offset-assert 160)
;    )
;   :method-count-assert 9
;   :size-assert         #xb0
;   :flag-assert         #x9000000b0
;   )

; ;; joint-exploder
; (deftype joint-exploder-joints (basic)
;   ((num-joints int32            :offset-assert 4)
;    (joint      UNKNOWN :dynamic :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; ;; joint-exploder
; (deftype joint-exploder-list (structure)
;   ((head        int32                :offset-assert 0)
;    (pre-moved?  basic                :offset-assert 4)
;    (bbox-valid? basic                :offset-assert 8)
;    (bbox        bounding-box :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; ;; joint-exploder
; (deftype joint-exploder (process-drawable)
;   ((~Tdie-if-below-y             float                         :offset-assert 176)
;    (~Tdie-if-beyond-xz-dist-sqrd float                         :offset-assert 180)
;    (~Tjoints                     basic                         :offset-assert 184)
;    (~Tstatic-params              basic                         :offset-assert 188)
;    (~Tanim                       basic                         :offset-assert 192)
;    (~Tscale-vector               vector                :inline :offset-assert 208)
;    (~Ttuning                     joint-exploder-tuning :inline :offset-assert 224)
;    (~Tlists                      UNKNOWN               5       :offset-assert 288)
;    )
;   :method-count-assert 29
;   :size-assert         #x210
;   :flag-assert         #x1d01a00210
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; ;; babak
; (deftype babak (nav-enemy)
;   ()
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; sharkey
; (deftype sharkey (nav-enemy)
;   ((~Tdir               vector :inline :offset-assert 400)
;    (~Tspawn-point       vector :inline :offset-assert 416)
;    (~Tscale             float          :offset-assert 432)
;    (~Tanim-speed        float          :offset-assert 436)
;    (~Ty-max             meters         :offset-assert 440)
;    (~Ty-min             meters         :offset-assert 444)
;    (~Tattack-time       float          :offset-assert 448)
;    (~Tplayer-water-time uint64         :offset-assert 456)
;    (~Tplayer-in-water   basic          :offset-assert 464)
;    (~Tlast-y            float          :offset-assert 468)
;    (~Tspawn-distance    meters         :offset-assert 472)
;    (~Tchase-speed       meters         :offset-assert 476)
;    (~Ty-speed           meters         :offset-assert 480)
;    (~Tsound-id          uint32         :offset-assert 484)
;    (~Tenable-patrol     basic          :offset-assert 488)
;    )
;   :method-count-assert 76
;   :size-assert         #x1ec
;   :flag-assert         #x4c018001ec
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; orb-cache
; (deftype orb-cache-top (baseplat)
;   ((~Tactive-distance   float      :offset-assert 228)
;    (~Tinactive-distance float      :offset-assert 232)
;    (~Tmoney-list        UNKNOWN 60 :offset-assert 240)
;    (~Tmoney-pos-list    UNKNOWN 60 :offset-assert 720)
;    (~Tmoney-pos-actual  UNKNOWN 60 :offset-assert 960)
;    (~Tplatform-pos      float      :offset-assert 1200)
;    (~Troot-pos          float      :offset-assert 1204)
;    (~Tmoney             int32      :offset-assert 1208)
;    (~Tactivated         basic      :offset-assert 1212)
;    )
;   :method-count-assert 29
;   :size-assert         #x4c0
;   :flag-assert         #x1d045004c0
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; ;; plat
; (deftype plat (baseplat)
;   ((~Tpath-pos float                   :offset-assert 228)
;    (~Tsync     sync-info-eased :inline :offset-assert 232)
;    (~Tsound-id uint32                  :offset-assert 260)
;    )
;   :method-count-assert 33
;   :size-assert         #x108
;   :flag-assert         #x2100a00108
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; plat-button
; (deftype plat-button (process-drawable)
;   ((~Tgo-back-if-lost-player? basic          :offset-assert 176)
;    (~Tgrab-player?            basic          :offset-assert 180)
;    (~Tshould-grab-player?     basic          :offset-assert 184)
;    (~Tpath-pos                float          :offset-assert 188)
;    (~Tbidirectional?          basic          :offset-assert 192)
;    (~Tallow-auto-kill         basic          :offset-assert 196)
;    (~Tsound-id                uint32         :offset-assert 200)
;    (~Ttrans-off               vector :inline :offset-assert 208)
;    (~Tspawn-pos               vector :inline :offset-assert 224)
;    )
;   :method-count-assert 33
;   :size-assert         #xf0
;   :flag-assert         #x21008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; plat-eco
; (deftype plat-eco (plat)
;   ((~Tnotice-dist      float           :offset-assert 264)
;    (~Tsync-offset-dest float           :offset-assert 268)
;    (~Tsync-offset-faux float           :offset-assert 272)
;    (~Tsync-linear-val  float           :offset-assert 276)
;    (~Ttarget           uint64          :offset-assert 280)
;    (~Tunlit-look       lod-set :inline :offset-assert 288)
;    (~Tlit-look         lod-set :inline :offset-assert 324)
;    )
;   :method-count-assert 33
;   :size-assert         #x165
;   :flag-assert         #x2101000165
;   ;; inherited inspect of plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; ropebridge
; (deftype ropebridge-tuning (structure)
;   ((num-springs             int32   :offset-assert 0)
;    (num-spring-points       int32   :offset-assert 4)
;    (col-mesh-indexes        uint32  :offset-assert 8)
;    (view-frustum-radius     float   :offset-assert 12)
;    (root-prim-radius        float   :offset-assert 16)
;    (desired-spring-len      float   :offset-assert 20)
;    (gravity                 float   :offset-assert 24)
;    (spring-coefficient      float   :offset-assert 28)
;    (spring-mass             float   :offset-assert 32)
;    (friction                float   :offset-assert 36)
;    (max-influence-dist      float   :offset-assert 40)
;    (rider-max-gravity       float   :offset-assert 44)
;    (max-bonk-influence-dist float   :offset-assert 48)
;    (rider-bonk-force        float   :offset-assert 52)
;    (rider-bonk-min          float   :offset-assert 56)
;    (rider-bonk-max          float   :offset-assert 60)
;    (normal-board-len        float   :offset-assert 64)
;    (bridge-end-to-end-len   float   :offset-assert 68)
;    (rest-state              basic   :offset-assert 72)
;    )
;   :method-count-assert 9
;   :size-assert         #x4c
;   :flag-assert         #x90000004c
;   )

; ;; ropebridge
; (deftype ropebridge-spring-point (structure)
;   ((local-pos   vector :inline :offset-assert 0)
;    (vel         vector :inline :offset-assert 16)
;    (extra-force vector :inline :offset-assert 32)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; ;; ropebridge
; (deftype ropebridge (process-drawable)
;   ((~Tsubtype                uint64                    :offset-assert 176)
;    (~Tsubtype-name           basic                     :offset-assert 184)
;    (~Tagitated-time-stamp    uint64                    :offset-assert 192)
;    (~Tbonk-time-stamp        uint64                    :offset-assert 200)
;    (~Tattack-flop-time-stamp uint64                    :offset-assert 208)
;    (~Tplayer-attack-id       uint64                    :offset-assert 216)
;    (~Tsleep-dist             float                     :offset-assert 224)
;    (~Tdo-physics?            basic                     :offset-assert 228)
;    (~Ttuning                 ropebridge-tuning         :offset-assert 232)
;    (~Tworld-matrix           matrix            :inline :offset-assert 240)
;    (~Tinv-world-matrix       matrix            :inline :offset-assert 304)
;    (~Textra-trans            vector            :inline :offset-assert 368)
;    (~Tspring-point           UNKNOWN           36      :offset-assert 384)
;    )
;   :method-count-assert 29
;   :size-assert         #x840
;   :flag-assert         #x1d07d00840
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; ;; ticky
; (deftype ticky (structure)
;   ((delay-til-ramp    uint64  :offset-assert 0)
;    (delay-til-timeout uint64  :offset-assert 8)
;    (starting-time     uint64  :offset-assert 16)
;    (last-tick-time    uint64  :offset-assert 24)
;    )
;   :method-count-assert 12
;   :size-assert         #x20
;   :flag-assert         #xc00000020
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     )
;   )




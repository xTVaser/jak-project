

; ;; darkcave-obs
; (deftype cavecrystal (process-drawable)
;   ((~Tis-master?                 basic          :offset-assert 176)
;    (~Tcrystal-id                 int32          :offset-assert 180)
;    (~Tglow-u                     float          :offset-assert 184)
;    (~Tglow-wf-period             int32          :offset-assert 188)
;    (~Tglow-wf-offset             int32          :offset-assert 192)
;    (~Tprev-compute-glow-time     uint64         :offset-assert 200)
;    (~Tstart-fade-time            uint64         :offset-assert 208)
;    (~Tend-fade-time              uint64         :offset-assert 216)
;    (~Tactivated-time             uint64         :offset-assert 224)
;    (~Tlast-updated-user-lighting uint64         :offset-assert 232)
;    (~Tplayer-attack-id           uint64         :offset-assert 240)
;    (~Ton-color-mult              vector :inline :offset-assert 256)
;    (~Ton-color-emissive          vector :inline :offset-assert 272)
;    (~Toff-color-mult             vector :inline :offset-assert 288)
;    (~Toff-color-emissive         vector :inline :offset-assert 304)
;    )
;   :method-count-assert 22
;   :size-assert         #x140
;   :flag-assert         #x1600d00140
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; static-screen
; (deftype static-screen (process)
;   ((~Tpart       UNKNOWN 1 :offset-assert 112)
;    (~Tstate-time uint64    :offset-assert 120)
;    )
;   :method-count-assert 15
;   :size-assert         #x80
;   :flag-assert         #xf00100080
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; robotboss-h
; (deftype robotboss-dda (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; ;; robotboss-h
; (deftype robotboss (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; ;; light-eco
; (deftype light-eco-child (process-drawable)
;   ((~Tangle-bit          int32              :offset-assert 176)
;    (~Tground-y           float              :offset-assert 180)
;    (~Tfalling-start-time uint64             :offset-assert 184)
;    (~Tlast-update-time   uint64             :offset-assert 192)
;    (~Trot                vector     :inline :offset-assert 208)
;    (~Trotv               vector     :inline :offset-assert 224)
;    (~Ttraj               trajectory :inline :offset-assert 240)
;    )
;   :method-count-assert 21
;   :size-assert         #x118
;   :flag-assert         #x1500b00118
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; light-eco
; (deftype light-eco-mother (process-drawable)
;   ((~Tplayer-got-eco?   basic   :offset-assert 176)
;    (~Tangle-mask        uint64  :offset-assert 184)
;    (~Tdelay-til-spawn   int32   :offset-assert 192)
;    (~Tpart2             basic   :offset-assert 196)
;    (~Tlast-update-time  uint64  :offset-assert 200)
;    (~Tlast-spawned-time uint64  :offset-assert 208)
;    )
;   :method-count-assert 22
;   :size-assert         #xd8
;   :flag-assert         #x16007000d8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; robotboss-weapon
; (deftype torus (structure)
;   ((origin           vector :inline :offset-assert 0)
;    (axis             vector :inline :offset-assert 16)
;    (radius-primary   float          :offset-assert 32)
;    (radius-secondary float          :offset-assert 36)
;    )
;   :method-count-assert 13
;   :size-assert         #x28
;   :flag-assert         #xd00000028
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     )
;   )

; ;; robotboss-weapon
; (deftype torus-verts (structure)
;   ((vert UNKNOWN 8 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x80
;   :flag-assert         #x900000080
;   )

; ;; robotboss-weapon
; (deftype arcing-shot (process-drawable)
;   ((~Ty-vel float          :offset-assert 176)
;    (~Tgrav  float          :offset-assert 180)
;    (~Tfrom  vector :inline :offset-assert 192)
;    (~Tto    vector :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; robotboss-weapon
; (deftype darkecobomb (arcing-shot)
;   ((~Tflight-time    uint64  :offset-assert 224)
;    (~Tcountdown-time float   :offset-assert 232)
;    (~Tanim-speed     float   :offset-assert 236)
;    (~Tnext-tick      float   :offset-assert 240)
;    )
;   :method-count-assert 20
;   :size-assert         #xf4
;   :flag-assert         #x14009000f4
;   ;; inherited inspect of arcing-shot
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; robotboss-weapon
; (deftype greenshot (arcing-shot)
;   ((~Tflight-time uint64  :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of arcing-shot
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; robotboss-weapon
; (deftype redshot (arcing-shot)
;   ((~Tflight-time     uint64         :offset-assert 224)
;    (~Tstall-time      uint64         :offset-assert 232)
;    (~Tring            torus  :inline :offset-assert 240)
;    (~Trotation-offset uint64         :offset-assert 280)
;    (~Tpart-track      uint64         :offset-assert 288)
;    (~Tshot-particle   basic          :offset-assert 296)
;    (~Ttest-particle   basic          :offset-assert 300)
;    )
;   :method-count-assert 20
;   :size-assert         #x130
;   :flag-assert         #x1400c00130
;   ;; inherited inspect of arcing-shot
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; robotboss-weapon
; (deftype yellowshot (arcing-shot)
;   ((~Tflight-time uint64  :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of arcing-shot
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; robotboss-misc
; (deftype ecoclaw-part-info (structure)
;   ((tracker uint64         :offset-assert 0)
;    (kind    basic          :offset-assert 8)
;    (trans   vector :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; ;; robotboss-misc
; (deftype ecoclaw (process-drawable)
;   ((~Tparticles UNKNOWN 3 :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #x110
;   :flag-assert         #x1400a00110
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; robotboss-misc
; (deftype silodoor (process-drawable)
;   ((~Tpart-opened float  :offset-assert 176)
;    )
;   :method-count-assert 22
;   :size-assert         #xb4
;   :flag-assert         #x16005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; robotboss-misc
; (deftype finalbosscam (process-taskable)
;   ((~Trobotboss uint64  :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x188
;   :flag-assert         #x3501200188
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; green-eco-lurker
; (deftype green-eco-lurker (nav-enemy)
;   ((~Tplayed-sound? basic              :offset-assert 400)
;    (~Tsound-delay   int32              :offset-assert 404)
;    (~Tappear-dest   vector     :inline :offset-assert 416)
;    (~Ttraj          trajectory :inline :offset-assert 432)
;    )
;   :method-count-assert 76
;   :size-assert         #x1d8
;   :flag-assert         #x4c017001d8
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; green-eco-lurker
; (deftype green-eco-lurker-gen (process-drawable)
;   ((~Tnum-to-spawn int32  :offset-assert 176)
;    (~Tnum-spawned  int32  :offset-assert 180)
;    (~Tnum-alive    int32  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; robotboss
; (deftype redshot-launch-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; ;; robotboss
; (deftype redshot-launch-array (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; ;; final-door
; (deftype fin-door (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; final-door
; (deftype final-door (process-drawable)
;   ()
;   :method-count-assert 23
;   :size-assert         #xb0
;   :flag-assert         #x17004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; final-door
; (deftype power-left (final-door)
;   ()
;   :method-count-assert 23
;   :size-assert         #xb0
;   :flag-assert         #x17004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; final-door
; (deftype power-right (final-door)
;   ()
;   :method-count-assert 23
;   :size-assert         #xb0
;   :flag-assert         #x17004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; final-door
; (deftype powercellalt (process-drawable)
;   ((~Tjump-pos vector :inline :offset-assert 176)
;    (~Tbase     vector :inline :offset-assert 192)
;    (~Tindex    int32          :offset-assert 208)
;    )
;   :method-count-assert 23
;   :size-assert         #xd4
;   :flag-assert         #x17007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; sage-finalboss-FIN
; (deftype plat-eco-finalboss (plat-eco)
;   ((~Tforce-dest float   :offset-assert 360)
;    (~Ttarg-dest  float   :offset-assert 364)
;    (~Tdest       float   :offset-assert 368)
;    (~Tspeed      float   :offset-assert 372)
;    (~Ttouch-time uint64  :offset-assert 376)
;    )
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;; inherited inspect of plat-eco
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; sage-finalboss-FIN
; (deftype sage-finalboss-particle (structure)
;   ((part   basic  :offset-assert 0)
;    (active basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; sage-finalboss-FIN
; (deftype sage-finalboss (process-taskable)
;   ((~Tredsage           uint64    :offset-assert 384)
;    (~Tbluesage          uint64    :offset-assert 392)
;    (~Tyellowsage        uint64    :offset-assert 400)
;    (~Tassistant         uint64    :offset-assert 408)
;    (~Trobotplat         uint64    :offset-assert 416)
;    (~Trobotboss         uint64    :offset-assert 424)
;    (~Tsilodoor          uint64    :offset-assert 432)
;    (~Tjak-white         uint64    :offset-assert 440)
;    (~Tleft-door         basic     :offset-assert 448)
;    (~Tright-door        basic     :offset-assert 452)
;    (~Tkick-in-the-door  basic     :offset-assert 456)
;    (~Tkick-the-credits  basic     :offset-assert 460)
;    (~Tcredit-fade       float     :offset-assert 464)
;    (~Tpalette-val       float     :offset-assert 468)
;    (~Tparticle          UNKNOWN 9 :offset-assert 472)
;    (~Tparticle-whiteout basic     :offset-assert 616)
;    (~Tcredits-played    basic     :offset-assert 620)
;    )
;   :method-count-assert 53
;   :size-assert         #x270
;   :flag-assert         #x3502000270
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; sage-finalboss-L1
; (deftype plat-eco-finalboss (plat-eco)
;   ((~Tforce-dest float   :offset-assert 360)
;    (~Ttarg-dest  float   :offset-assert 364)
;    (~Tdest       float   :offset-assert 368)
;    (~Tspeed      float   :offset-assert 372)
;    (~Ttouch-time uint64  :offset-assert 376)
;    )
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;; inherited inspect of plat-eco
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; sage-finalboss-L1
; (deftype sage-finalboss-particle (structure)
;   ((part   basic  :offset-assert 0)
;    (active basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; sage-finalboss-L1
; (deftype sage-finalboss (process-taskable)
;   ((~Tredsage           uint64    :offset-assert 384)
;    (~Tbluesage          uint64    :offset-assert 392)
;    (~Tyellowsage        uint64    :offset-assert 400)
;    (~Tassistant         uint64    :offset-assert 408)
;    (~Trobotplat         uint64    :offset-assert 416)
;    (~Trobotboss         uint64    :offset-assert 424)
;    (~Tsilodoor          uint64    :offset-assert 432)
;    (~Tjak-white         uint64    :offset-assert 440)
;    (~Tleft-door         basic     :offset-assert 448)
;    (~Tright-door        basic     :offset-assert 452)
;    (~Tkick-in-the-door  basic     :offset-assert 456)
;    (~Tkick-the-credits  basic     :offset-assert 460)
;    (~Tcredit-fade       float     :offset-assert 464)
;    (~Tpalette-val       float     :offset-assert 468)
;    (~Tparticle          UNKNOWN 9 :offset-assert 472)
;    (~Tparticle-whiteout basic     :offset-assert 616)
;    (~Tcredits-played    basic     :offset-assert 620)
;    )
;   :method-count-assert 53
;   :size-assert         #x270
;   :flag-assert         #x3502000270
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; evilbro
; (deftype evilbro (process-taskable)
;   ((~Tevilsis basic  :offset-assert 380)
;    )
;   :method-count-assert 53
;   :size-assert         #x180
;   :flag-assert         #x3501100180
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; evilbro
; (deftype evilsis (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; jungleb-obs
; (deftype eggtop (process-drawable)
;   ((~Tcam-tracker uint64  :offset-assert 176)
;    (~Tsound-id    uint32  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungleb-obs
; (deftype jng-iris-door (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; plat-flip
; (deftype plat-flip (process-drawable)
;   ((~Tpath-pos              float                 :offset-assert 176)
;    (~Tbefore-turn-down-time float                 :offset-assert 180)
;    (~Tturn-down-time        float                 :offset-assert 184)
;    (~Tbefore-turn-up-time   float                 :offset-assert 188)
;    (~Tturn-up-time          float                 :offset-assert 192)
;    (~Ttotal-time            float                 :offset-assert 196)
;    (~Tsync                  sync-info     :inline :offset-assert 200)
;    (~Tbase-pos              vector        :inline :offset-assert 208)
;    (~Tsmush                 smush-control :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #x100
;   :flag-assert         #x1400900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; aphid
; (deftype aphid (nav-enemy)
;   ((~Ttry int32  :offset-assert 400)
;    )
;   :method-count-assert 76
;   :size-assert         #x194
;   :flag-assert         #x4c01300194
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; plant-boss
; (deftype plant-boss (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; ;; plant-boss
; (deftype plant-boss-arm (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; ;; plant-boss
; (deftype plant-boss-leaf (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; ;; jungle-elevator
; (deftype jungle-elevator (plat-button)
;   ((~Tbottom-height       float  :offset-assert 240)
;    (~Tteleport-if-below-y float  :offset-assert 244)
;    (~Tteleport-if-above-y float  :offset-assert 248)
;    )
;   :method-count-assert 33
;   :size-assert         #xfc
;   :flag-assert         #x21009000fc
;   ;; inherited inspect of plat-button
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; bouncer
; (deftype springbox (process-drawable)
;   ((~Tspring-height meters  :offset-assert 176)
;    (~Tsmush         float   :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; hopper
; (deftype hopper (nav-enemy)
;   ((~Tjump-length  float  :offset-assert 400)
;    (~Tshadow-min-y float  :offset-assert 404)
;    )
;   :method-count-assert 76
;   :size-assert         #x198
;   :flag-assert         #x4c01300198
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; junglesnake
; (deftype junglesnake-twist-joint (structure)
;   ((joint-index   int32  :offset-assert 0)
;    (ry            float  :offset-assert 4)
;    (drag-delta-ry float  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; ;; junglesnake
; (deftype junglesnake-tilt-joint (structure)
;   ((joint-index int32  :offset-assert 0)
;    (flip-it     basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; junglesnake
; (deftype junglesnake (process-drawable)
;   ((~Tstate-time        uint64     :offset-assert 168)
;    (~Thit-player        basic      :offset-assert 184)
;    (~Tis-lethal?        basic      :offset-assert 188)
;    (~Trefractory-delay  int32      :offset-assert 192)
;    (~Try                float      :offset-assert 196)
;    (~Tdes-ry            float      :offset-assert 200)
;    (~Ttilt              float      :offset-assert 204)
;    (~Tdes-tilt          float      :offset-assert 208)
;    (~Ttrack-player-ry   basic      :offset-assert 212)
;    (~Ttrack-player-tilt basic      :offset-assert 216)
;    (~Ttwist-joints      UNKNOWN 24 :offset-assert 220)
;    (~Ttilt-joints       UNKNOWN 3  :offset-assert 604)
;    )
;   :method-count-assert 25
;   :size-assert         #x28c
;   :flag-assert         #x190220028c
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     )
;   )

; ;; darkvine
; (deftype darkvine (process-drawable)
;   ((~Tspeed            float   :offset-assert 176)
;    (~Ttip-index        int8    :offset-assert 180)
;    (~Tdangerous        basic   :offset-assert 184)
;    (~Tvulnerable       basic   :offset-assert 188)
;    (~Thit-player       basic   :offset-assert 192)
;    (~Ttouch-time       uint64  :offset-assert 200)
;    (~Tplayer-attack-id int32   :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype logtrap (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; jungle-obs
; (deftype towertop (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype lurkerm-tall-sail (process-drawable)
;   ((~Tspeed     float  :offset-assert 176)
;    (~Talt-actor basic  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype lurkerm-short-sail (process-drawable)
;   ((~Tspeed     float  :offset-assert 176)
;    (~Talt-actor basic  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype lurkerm-piston (process-drawable)
;   ((~Tsync      sync-info :inline :offset-assert 176)
;    (~Tbase      vector    :inline :offset-assert 192)
;    (~Theight    vector    :inline :offset-assert 208)
;    (~Tspeed     float             :offset-assert 224)
;    (~Talt-actor basic             :offset-assert 228)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype accordian (process-drawable)
;   ((~Tspeed     float  :offset-assert 176)
;    (~Talt-actor basic  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype junglecam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; jungle-obs
; (deftype precurbridgecam (pov-camera)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; jungle-obs
; (deftype precurbridge-span (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   )

; ;; jungle-obs
; (deftype precurbridge (process-drawable)
;   ((~Tsmush            smush-control :inline :offset-assert 176)
;    (~Tbase             vector        :inline :offset-assert 208)
;    (~Tactivation-point vector        :inline :offset-assert 224)
;    (~Tspan-array       UNKNOWN       8       :offset-assert 240)
;    )
;   :method-count-assert 20
;   :size-assert         #x110
;   :flag-assert         #x1400a00110
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype maindoor (process-drawable)
;   ((~Tthresh vector :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype sidedoor (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; jungle-obs
; (deftype jngpusher (process-drawable)
;   ((~Tsync      sync-info :inline :offset-assert 176)
;    (~Tback-prim basic             :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-obs
; (deftype jungle-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; jungle-mirrors
; (deftype periscope (process-drawable)
;   ((~Ty-offset               meters         :offset-assert 176)
;    (~Ty-offset-grips         meters         :offset-assert 180)
;    (~Theight                 meters         :offset-assert 184)
;    (~Tturn                   deg            :offset-assert 188)
;    (~Ttilt                   deg            :offset-assert 192)
;    (~Ttarget-turn            deg            :offset-assert 196)
;    (~Ttarget-tilt            deg            :offset-assert 200)
;    (~Tbase                   vector :inline :offset-assert 208)
;    (~Treflector-trans        vector :inline :offset-assert 224)
;    (~Tnext-reflector-trans   vector :inline :offset-assert 240)
;    (~Tprev-reflector-trans   vector :inline :offset-assert 256)
;    (~Told-camera-matrix      matrix :inline :offset-assert 272)
;    (~Treflector              uint32         :offset-assert 336)
;    (~Tgauge-rot              deg            :offset-assert 340)
;    (~Tlock-time              uint64         :offset-assert 344)
;    (~Taligned?               basic          :offset-assert 352)
;    (~Traised?                basic          :offset-assert 356)
;    (~Tplayer-touching-grips? basic          :offset-assert 360)
;    (~Tgrips-moving?          basic          :offset-assert 364)
;    (~Tsound-id               uint32         :offset-assert 368)
;    (~Trise-sound-id          uint32         :offset-assert 372)
;    (~Tgrips-sound-id         uint32         :offset-assert 376)
;    (~Tgrips                  basic          :offset-assert 380)
;    (~Tpart-aligned           basic          :offset-assert 384)
;    )
;   :method-count-assert 20
;   :size-assert         #x184
;   :flag-assert         #x1401200184
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-mirrors
; (deftype reflector (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-mirrors
; (deftype reflector-origin (process-drawable)
;   ((~Treflector-trans      vector :inline :offset-assert 176)
;    (~Tnext-reflector-trans vector :inline :offset-assert 192)
;    (~Treflector            uint32         :offset-assert 208)
;    (~Tnext                 basic          :offset-assert 212)
;    (~Tblocker              basic          :offset-assert 216)
;    )
;   :method-count-assert 20
;   :size-assert         #xdc
;   :flag-assert         #x14007000dc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-mirrors
; (deftype reflector-mirror (process-drawable)
;   ((~Tbeam-end vector :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; junglefish
; (deftype junglefish (nav-enemy)
;   ()
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; fisher-JUN
; (deftype fisher-bank (basic)
;   ((width      meters  :offset-assert 4)
;    (net-radius meters  :offset-assert 8)
;    (max-caught int32   :offset-assert 12)
;    (max-missed int32   :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x14
;   :flag-assert         #x900000014
;   )

; ;; fisher-JUN
; (deftype fisher-params (structure)
;   ((timeout         uint64  :offset-assert 0)
;    (vel             float   :offset-assert 8)
;    (swing-min       uint64  :offset-assert 16)
;    (swing-max       uint64  :offset-assert 24)
;    (period          uint64  :offset-assert 32)
;    (fish-vel        float   :offset-assert 40)
;    (bad-percent     float   :offset-assert 44)
;    (deadly-percent  float   :offset-assert 48)
;    (powerup-percent float   :offset-assert 52)
;    )
;   :method-count-assert 9
;   :size-assert         #x38
;   :flag-assert         #x900000038
;   )

; ;; fisher-JUN
; (deftype fisher (process-taskable)
;   ((~Tpaddle-end      UNKNOWN       2       :offset-assert 384)
;    (~Tpaddle-pos      vector        :inline :offset-assert 416)
;    (~Tpaddle          float                 :offset-assert 432)
;    (~Tpaddle-vel      float                 :offset-assert 436)
;    (~Tspawner         float                 :offset-assert 440)
;    (~Tspawner-last    float                 :offset-assert 444)
;    (~Tspawn-time      uint64                :offset-assert 448)
;    (~Tturn-time       uint64                :offset-assert 456)
;    (~Tswing-time      uint64                :offset-assert 464)
;    (~Tblock-time      uint64                :offset-assert 472)
;    (~Tblock           int32                 :offset-assert 480)
;    (~Tcaught          int32                 :offset-assert 484)
;    (~Tmissed          int32                 :offset-assert 488)
;    (~Tdifficulty      int32                 :offset-assert 492)
;    (~Tstart-time      uint64                :offset-assert 496)
;    (~Tambient-big-one uint64                :offset-assert 504)
;    (~Tambient-steady  uint64                :offset-assert 512)
;    (~Tambient-sagging uint64                :offset-assert 520)
;    (~Tambient-almost  uint64                :offset-assert 528)
;    (~Tcheat-temp      int32                 :offset-assert 536)
;    (~Thard            basic                 :offset-assert 540)
;    (~Ttraining        basic                 :offset-assert 544)
;    (~Tparams          fisher-params :inline :offset-assert 552)
;    )
;   :method-count-assert 53
;   :size-assert         #x260
;   :flag-assert         #x3501f00260
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; fisher-JUN
; (deftype fisher-fish (process-drawable)
;   ((~Tdir    vector :inline :offset-assert 176)
;    (~Toffset float          :offset-assert 192)
;    (~Tpos    float          :offset-assert 196)
;    (~Tvel    float          :offset-assert 200)
;    (~Tmode   basic          :offset-assert 204)
;    (~Tsize   meters         :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; fisher-JUNGLE-L1
; (deftype fisher-bank (basic)
;   ((width      meters  :offset-assert 4)
;    (net-radius meters  :offset-assert 8)
;    (max-caught int32   :offset-assert 12)
;    (max-missed int32   :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x14
;   :flag-assert         #x900000014
;   )

; ;; fisher-JUNGLE-L1
; (deftype fisher-params (structure)
;   ((timeout         uint64  :offset-assert 0)
;    (vel             float   :offset-assert 8)
;    (swing-min       uint64  :offset-assert 16)
;    (swing-max       uint64  :offset-assert 24)
;    (period          uint64  :offset-assert 32)
;    (fish-vel        float   :offset-assert 40)
;    (bad-percent     float   :offset-assert 44)
;    (deadly-percent  float   :offset-assert 48)
;    (powerup-percent float   :offset-assert 52)
;    )
;   :method-count-assert 9
;   :size-assert         #x38
;   :flag-assert         #x900000038
;   )

; ;; fisher-JUNGLE-L1
; (deftype fisher (process-taskable)
;   ((~Tpaddle-end      UNKNOWN       2       :offset-assert 384)
;    (~Tpaddle-pos      vector        :inline :offset-assert 416)
;    (~Tpaddle          float                 :offset-assert 432)
;    (~Tpaddle-vel      float                 :offset-assert 436)
;    (~Tspawner         float                 :offset-assert 440)
;    (~Tspawner-last    float                 :offset-assert 444)
;    (~Tspawn-time      uint64                :offset-assert 448)
;    (~Tturn-time       uint64                :offset-assert 456)
;    (~Tswing-time      uint64                :offset-assert 464)
;    (~Tblock-time      uint64                :offset-assert 472)
;    (~Tblock           int32                 :offset-assert 480)
;    (~Tcaught          int32                 :offset-assert 484)
;    (~Tmissed          int32                 :offset-assert 488)
;    (~Tdifficulty      int32                 :offset-assert 492)
;    (~Tstart-time      uint64                :offset-assert 496)
;    (~Tambient-big-one uint64                :offset-assert 504)
;    (~Tambient-steady  uint64                :offset-assert 512)
;    (~Tambient-sagging uint64                :offset-assert 520)
;    (~Tambient-almost  uint64                :offset-assert 528)
;    (~Tcheat-temp      int32                 :offset-assert 536)
;    (~Thard            basic                 :offset-assert 540)
;    (~Ttraining        basic                 :offset-assert 544)
;    (~Tparams          fisher-params :inline :offset-assert 552)
;    )
;   :method-count-assert 53
;   :size-assert         #x260
;   :flag-assert         #x3501f00260
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; fisher-JUNGLE-L1
; (deftype fisher-fish (process-drawable)
;   ((~Tdir    vector :inline :offset-assert 176)
;    (~Toffset float          :offset-assert 192)
;    (~Tpos    float          :offset-assert 196)
;    (~Tvel    float          :offset-assert 200)
;    (~Tmode   basic          :offset-assert 204)
;    (~Tsize   meters         :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; jungle-part
; (deftype jungle-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; launcherdoor
; (deftype launcherdoor (process-drawable)
;   ((~Tnotify-player-passed-thru? basic  :offset-assert 176)
;    (~Tthresh-y                   float  :offset-assert 180)
;    (~Topen-speed                 float  :offset-assert 184)
;    (~Tclose-speed                float  :offset-assert 188)
;    (~Tload-mode                  basic  :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xc4
;   :flag-assert         #x14006000c4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; target-racer-h-L1-RACERP
; (deftype racer-info (basic)
;   ((entity              basic                 :offset-assert 4)
;    (bike-trans          vector        :inline :offset-assert 16)
;    (bike-quat           vector        :inline :offset-assert 32)
;    (bike-scale          vector        :inline :offset-assert 48)
;    (mod-x               float                 :offset-assert 64)
;    (rot                 vector        :inline :offset-assert 80)
;    (rot-old             vector        :inline :offset-assert 96)
;    (rotv                vector        :inline :offset-assert 112)
;    (lean-rotx           deg                   :offset-assert 128)
;    (change-roty         deg                   :offset-assert 132)
;    (change-roty-old     deg                   :offset-assert 136)
;    (quat                vector        :inline :offset-assert 144)
;    (surface-y           meters                :offset-assert 160)
;    (surface-vy          meters                :offset-assert 164)
;    (surface-quat        vector        :inline :offset-assert 176)
;    (surface-quat-smooth vector        :inline :offset-assert 192)
;    (cushion-base        meters                :offset-assert 208)
;    (cushion-offset      meters                :offset-assert 212)
;    (cushion-bob         meters                :offset-assert 216)
;    (cushion-bob-old     meters                :offset-assert 220)
;    (cushion-smush       smush-control :inline :offset-assert 224)
;    (shock-offset        meters                :offset-assert 256)
;    (shock-offsetv       meters                :offset-assert 260)
;    (shock-rotx          meters                :offset-assert 264)
;    (hill-value          float                 :offset-assert 268)
;    (hill-ground-value   float                 :offset-assert 272)
;    (hill-offset         meters                :offset-assert 276)
;    (hill-rotx           deg                   :offset-assert 280)
;    (hill-boost          meters                :offset-assert 284)
;    (bob-timer           float                 :offset-assert 288)
;    (bob-meta-timer      float                 :offset-assert 292)
;    (bob-meta-meta-timer float                 :offset-assert 296)
;    (bob-mult-rot        float                 :offset-assert 300)
;    (bob-mult-trans      float                 :offset-assert 304)
;    (bob-period          float                 :offset-assert 308)
;    (bob-meta-time       uint64                :offset-assert 312)
;    (bob-hit-ground-time uint64                :offset-assert 320)
;    (cur-rotx            deg                   :offset-assert 328)
;    (targ-rotx           deg                   :offset-assert 332)
;    (speed-rotx          float                 :offset-assert 336)
;    (mult-rotx           deg                   :offset-assert 340)
;    (front-blade         basic                 :offset-assert 344)
;    (front-rot           deg                   :offset-assert 348)
;    (front-rotv          deg                   :offset-assert 352)
;    (bottom-blade        basic                 :offset-assert 356)
;    (bottom-rot          deg                   :offset-assert 360)
;    (front               basic                 :offset-assert 364)
;    (front-turn          deg                   :offset-assert 368)
;    (tail                basic                 :offset-assert 372)
;    (tail-tilt           deg                   :offset-assert 376)
;    (transv-max          meters                :offset-assert 380)
;    (slide-down-time     UNKNOWN       2       :offset-assert 384)
;    (slide-enter-time    uint64                :offset-assert 400)
;    (slide-mode          int32                 :offset-assert 408)
;    (slide-amp           float                 :offset-assert 412)
;    (slide-grip-mult     float                 :offset-assert 416)
;    (slide-shift-x       float                 :offset-assert 420)
;    (slide-interp        float                 :offset-assert 424)
;    (heat                float                 :offset-assert 428)
;    (boost-time          uint64                :offset-assert 432)
;    (boost-duration      uint64                :offset-assert 440)
;    (boost-curve         float                 :offset-assert 448)
;    (boost-level         float                 :offset-assert 452)
;    (boost-target        float                 :offset-assert 456)
;    (boost-output        float                 :offset-assert 460)
;    (hop?                basic                 :offset-assert 464)
;    (hop-start-y         float                 :offset-assert 468)
;    (bounce              int32                 :offset-assert 472)
;    (bounce-hit          float                 :offset-assert 476)
;    (engine-sound-id     uint32                :offset-assert 480)
;    (boost-sound-id      uint32                :offset-assert 484)
;    (engine-sound-pitch  float                 :offset-assert 488)
;    (turn-anim-targ      float                 :offset-assert 492)
;    (turn-anim-frame     float                 :offset-assert 496)
;    (turn-anim-vel       float                 :offset-assert 500)
;    (tail-anim-vel       float                 :offset-assert 504)
;    (tail-anim-frame     float                 :offset-assert 508)
;    (rudd-anim-vel       float                 :offset-assert 512)
;    (rudd-anim-frame     float                 :offset-assert 516)
;    (racing-time         uint64                :offset-assert 520)
;    (stick-lock          basic                 :offset-assert 528)
;    (stick-off           basic                 :offset-assert 532)
;    (heavy               basic                 :offset-assert 536)
;    (scrape-sound-id     uint32                :offset-assert 540)
;    (heat-sound-time     uint64                :offset-assert 544)
;    )
;   :method-count-assert 9
;   :size-assert         #x238
;   :flag-assert         #x900000238
;   )

; ;; target-racer-h-L1-RACERP
; (deftype racer-bank (basic)
;   ((slide-hold-time            useconds  :offset-assert 8)
;    (heat-max                   float     :offset-assert 16)
;    (hotcoals-heat-inc          float     :offset-assert 20)
;    (lava-heat-inc              float     :offset-assert 24)
;    (lava-air-heat-inc          float     :offset-assert 28)
;    (surface-heat-inc           float     :offset-assert 32)
;    (jump-heat-inc              float     :offset-assert 36)
;    (lavatube-hotcoals-heat-inc float     :offset-assert 40)
;    (lavatube-lava-heat-inc     float     :offset-assert 44)
;    (lavatube-lava-air-heat-inc float     :offset-assert 48)
;    (lavatube-surface-heat-inc  float     :offset-assert 52)
;    (lavatube-jump-heat-inc     float     :offset-assert 56)
;    (boost-curve-max            meters    :offset-assert 60)
;    (boost-level-max            meters    :offset-assert 64)
;    (boost-level-inc            meters    :offset-assert 68)
;    (boost-duration             useconds  :offset-assert 72)
;    (default-front-blade        deg       :offset-assert 80)
;    (yellow-projectile-speed    meters    :offset-assert 84)
;    )
;   :method-count-assert 9
;   :size-assert         #x58
;   :flag-assert         #x900000058
;   )

; ;; target-racer-h-FIC-LAV-MIS-OGR-ROL
; (deftype racer-info (basic)
;   ((entity              basic                 :offset-assert 4)
;    (bike-trans          vector        :inline :offset-assert 16)
;    (bike-quat           vector        :inline :offset-assert 32)
;    (bike-scale          vector        :inline :offset-assert 48)
;    (mod-x               float                 :offset-assert 64)
;    (rot                 vector        :inline :offset-assert 80)
;    (rot-old             vector        :inline :offset-assert 96)
;    (rotv                vector        :inline :offset-assert 112)
;    (lean-rotx           deg                   :offset-assert 128)
;    (change-roty         deg                   :offset-assert 132)
;    (change-roty-old     deg                   :offset-assert 136)
;    (quat                vector        :inline :offset-assert 144)
;    (surface-y           meters                :offset-assert 160)
;    (surface-vy          meters                :offset-assert 164)
;    (surface-quat        vector        :inline :offset-assert 176)
;    (surface-quat-smooth vector        :inline :offset-assert 192)
;    (cushion-base        meters                :offset-assert 208)
;    (cushion-offset      meters                :offset-assert 212)
;    (cushion-bob         meters                :offset-assert 216)
;    (cushion-bob-old     meters                :offset-assert 220)
;    (cushion-smush       smush-control :inline :offset-assert 224)
;    (shock-offset        meters                :offset-assert 256)
;    (shock-offsetv       meters                :offset-assert 260)
;    (shock-rotx          meters                :offset-assert 264)
;    (hill-value          float                 :offset-assert 268)
;    (hill-ground-value   float                 :offset-assert 272)
;    (hill-offset         meters                :offset-assert 276)
;    (hill-rotx           deg                   :offset-assert 280)
;    (hill-boost          meters                :offset-assert 284)
;    (bob-timer           float                 :offset-assert 288)
;    (bob-meta-timer      float                 :offset-assert 292)
;    (bob-meta-meta-timer float                 :offset-assert 296)
;    (bob-mult-rot        float                 :offset-assert 300)
;    (bob-mult-trans      float                 :offset-assert 304)
;    (bob-period          float                 :offset-assert 308)
;    (bob-meta-time       uint64                :offset-assert 312)
;    (bob-hit-ground-time uint64                :offset-assert 320)
;    (cur-rotx            deg                   :offset-assert 328)
;    (targ-rotx           deg                   :offset-assert 332)
;    (speed-rotx          float                 :offset-assert 336)
;    (mult-rotx           deg                   :offset-assert 340)
;    (front-blade         basic                 :offset-assert 344)
;    (front-rot           deg                   :offset-assert 348)
;    (front-rotv          deg                   :offset-assert 352)
;    (bottom-blade        basic                 :offset-assert 356)
;    (bottom-rot          deg                   :offset-assert 360)
;    (front               basic                 :offset-assert 364)
;    (front-turn          deg                   :offset-assert 368)
;    (tail                basic                 :offset-assert 372)
;    (tail-tilt           deg                   :offset-assert 376)
;    (transv-max          meters                :offset-assert 380)
;    (slide-down-time     UNKNOWN       2       :offset-assert 384)
;    (slide-enter-time    uint64                :offset-assert 400)
;    (slide-mode          int32                 :offset-assert 408)
;    (slide-amp           float                 :offset-assert 412)
;    (slide-grip-mult     float                 :offset-assert 416)
;    (slide-shift-x       float                 :offset-assert 420)
;    (slide-interp        float                 :offset-assert 424)
;    (heat                float                 :offset-assert 428)
;    (boost-time          uint64                :offset-assert 432)
;    (boost-duration      uint64                :offset-assert 440)
;    (boost-curve         float                 :offset-assert 448)
;    (boost-level         float                 :offset-assert 452)
;    (boost-target        float                 :offset-assert 456)
;    (boost-output        float                 :offset-assert 460)
;    (hop?                basic                 :offset-assert 464)
;    (hop-start-y         float                 :offset-assert 468)
;    (bounce              int32                 :offset-assert 472)
;    (bounce-hit          float                 :offset-assert 476)
;    (engine-sound-id     uint32                :offset-assert 480)
;    (boost-sound-id      uint32                :offset-assert 484)
;    (engine-sound-pitch  float                 :offset-assert 488)
;    (turn-anim-targ      float                 :offset-assert 492)
;    (turn-anim-frame     float                 :offset-assert 496)
;    (turn-anim-vel       float                 :offset-assert 500)
;    (tail-anim-vel       float                 :offset-assert 504)
;    (tail-anim-frame     float                 :offset-assert 508)
;    (rudd-anim-vel       float                 :offset-assert 512)
;    (rudd-anim-frame     float                 :offset-assert 516)
;    (racing-time         uint64                :offset-assert 520)
;    (stick-lock          basic                 :offset-assert 528)
;    (stick-off           basic                 :offset-assert 532)
;    (heavy               basic                 :offset-assert 536)
;    (unstuck-time        uint64                :offset-assert 544)
;    (stuck-count         int32                 :offset-assert 552)
;    (scrape-sound-id     uint32                :offset-assert 556)
;    (heat-sound-time     uint64                :offset-assert 560)
;    )
;   :method-count-assert 9
;   :size-assert         #x238
;   :flag-assert         #x900000238
;   )

; ;; target-racer-h-FIC-LAV-MIS-OGR-ROL
; (deftype racer-bank (basic)
;   ((slide-hold-time            useconds  :offset-assert 8)
;    (heat-max                   float     :offset-assert 16)
;    (hotcoals-heat-inc          float     :offset-assert 20)
;    (lava-heat-inc              float     :offset-assert 24)
;    (lava-air-heat-inc          float     :offset-assert 28)
;    (surface-heat-inc           float     :offset-assert 32)
;    (jump-heat-inc              float     :offset-assert 36)
;    (lavatube-hotcoals-heat-inc float     :offset-assert 40)
;    (lavatube-lava-heat-inc     float     :offset-assert 44)
;    (lavatube-lava-air-heat-inc float     :offset-assert 48)
;    (lavatube-surface-heat-inc  float     :offset-assert 52)
;    (lavatube-jump-heat-inc     float     :offset-assert 56)
;    (boost-curve-max            meters    :offset-assert 60)
;    (boost-level-max            meters    :offset-assert 64)
;    (boost-level-inc            meters    :offset-assert 68)
;    (boost-duration             useconds  :offset-assert 72)
;    (default-front-blade        deg       :offset-assert 80)
;    (yellow-projectile-speed    meters    :offset-assert 84)
;    )
;   :method-count-assert 9
;   :size-assert         #x58
;   :flag-assert         #x900000058
;   )

; ;; racer-part
; (deftype hud-bike-heat (hud)
;   ()
;   :method-count-assert 27
;   :size-assert         #x118
;   :flag-assert         #x1b00b00118
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; racer-part
; (deftype hud-bike-speed (hud)
;   ()
;   :method-count-assert 27
;   :size-assert         #x118
;   :flag-assert         #x1b00b00118
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; racer
; (deftype racer (process-drawable)
;   ((~Textra-trans   vector  :inline :offset-assert 176)
;    (~Tcondition     int32           :offset-assert 192)
;    (~Tcell          uint64          :offset-assert 200)
;    (~Tpath-data     UNKNOWN 2       :offset-assert 208)
;    (~Tpath-target   basic           :offset-assert 208)
;    (~Tpath-racer    basic           :offset-assert 212)
;    (~Tauto-get-off  basic           :offset-assert 216)
;    (~Tshadow-backup basic           :offset-assert 220)
;    )
;   :method-count-assert 24
;   :size-assert         #xe0
;   :flag-assert         #x18007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

; ;; blocking-plane
; (deftype blocking-plane (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; flutflut
; (deftype flutflut (process-drawable)
;   ((~Textra-trans  vector  :inline :offset-assert 176)
;    (~Tcondition    int32           :offset-assert 192)
;    (~Tauto-get-off basic           :offset-assert 196)
;    (~Tcell         uint64          :offset-assert 200)
;    (~Tpath-data    UNKNOWN 2       :offset-assert 208)
;    (~Tpath-target  basic           :offset-assert 208)
;    (~Tpath-flut    basic           :offset-assert 212)
;    (~Ttouch-time   uint64          :offset-assert 216)
;    )
;   :method-count-assert 24
;   :size-assert         #xe0
;   :flag-assert         #x18007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

; ;; target-flut
; (deftype flut-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; ;; target-flut
; (deftype flut-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; ;; farmer
; (deftype farmer (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; explorer
; (deftype explorer (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; assistant
; (deftype assistant (process-taskable)
;   ((~Tsound-id uint32  :offset-assert 380)
;    )
;   :method-count-assert 53
;   :size-assert         #x180
;   :flag-assert         #x3501100180
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; sage
; (deftype sage (process-taskable)
;   ((~Treminder-played basic   :offset-assert 380)
;    (~Tassistant       uint64  :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x188
;   :flag-assert         #x3501200188
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; yakow
; (deftype yakow-bank (basic)
;   ((walk-cycle-frame-count float   :offset-assert 4)
;    (run-cycle-frame-count  float   :offset-assert 8)
;    (walk-speed             meters  :offset-assert 12)
;    (run-speed              meters  :offset-assert 16)
;    (walk-anim-speed        float   :offset-assert 20)
;    (run-anim-speed         float   :offset-assert 24)
;    (walk-away-dist         meters  :offset-assert 28)
;    (run-away-dist          meters  :offset-assert 32)
;    (walk-rotate-speed      float   :offset-assert 36)
;    (run-rotate-speed       float   :offset-assert 40)
;    (walk-turn-time         uint64  :offset-assert 48)
;    (run-turn-time          uint64  :offset-assert 56)
;    (max-walk-speed         float   :offset-assert 64)
;    (min-run-speed          float   :offset-assert 68)
;    (walk-run-blend-rate    float   :offset-assert 72)
;    (walk-turn-blend-rate   float   :offset-assert 76)
;    (max-run-speed          float   :offset-assert 80)
;    (acceleration           meters  :offset-assert 84)
;    (default-patrol-time    uint64  :offset-assert 88)
;    (default-idle-distance  meters  :offset-assert 96)
;    (safe-distance          meters  :offset-assert 100)
;    (min-run-anim-speed     float   :offset-assert 104)
;    (max-run-anim-speed     float   :offset-assert 108)
;    (min-walk-anim-speed    float   :offset-assert 112)
;    (speed-boost-impulse    meters  :offset-assert 116)
;    )
;   :method-count-assert 9
;   :size-assert         #x78
;   :flag-assert         #x900000078
;   )

; ;; yakow
; (deftype yakow (process-drawable)
;   ((~Tplayer-attack-id   int32          :offset-assert 176)
;    (~Twalk-run-blend     float          :offset-assert 180)
;    (~Twalk-turn-blend    float          :offset-assert 184)
;    (~Trun-mode           basic          :offset-assert 188)
;    (~Ttravel-speed       meters         :offset-assert 192)
;    (~Tfinal-speed        meters         :offset-assert 196)
;    (~Trotate-speed       float          :offset-assert 200)
;    (~Tturn-time          uint64         :offset-assert 208)
;    (~Tvulnerable         basic          :offset-assert 216)
;    (~Tgrazing            basic          :offset-assert 220)
;    (~Tpush-velocity      vector :inline :offset-assert 224)
;    (~Thome-base          vector :inline :offset-assert 240)
;    (~Tdest-base          vector :inline :offset-assert 256)
;    (~Tdest-rot           deg            :offset-assert 272)
;    (~Tenable-turn-around basic          :offset-assert 276)
;    (~Trotating           basic          :offset-assert 280)
;    (~Tin-pen             basic          :offset-assert 284)
;    )
;   :method-count-assert 20
;   :size-assert         #x120
;   :flag-assert         #x1400b00120
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype windmill-sail (process-drawable)
;   ((~Tsync         sync-info  :inline :offset-assert 176)
;    (~Tblade-normal vector     :inline :offset-assert 192)
;    (~Torig-quat    quaternion :inline :offset-assert 208)
;    (~Talt-actor    basic              :offset-assert 224)
;    (~Tpart2        basic              :offset-assert 228)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype sagesail (process-drawable)
;   ((~Tsync         sync-info  :inline :offset-assert 176)
;    (~Tblade-normal vector     :inline :offset-assert 192)
;    (~Torig-quat    quaternion :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype windspinner (process-drawable)
;   ((~Tblade-normal vector     :inline :offset-assert 176)
;    (~Torig-quat    quaternion :inline :offset-assert 192)
;    (~Tangle        float              :offset-assert 208)
;    (~Tangle-vel    float              :offset-assert 212)
;    )
;   :method-count-assert 20
;   :size-assert         #xd8
;   :flag-assert         #x14007000d8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype mayorgears (process-drawable)
;   ((~Talt-actor basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype reflector-middle (process-drawable)
;   ((~Treflector-trans      vector :inline :offset-assert 176)
;    (~Tnext-reflector-trans vector :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype reflector-end (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype villa-starfish (process-drawable)
;   ((~Tchild-count int8  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype starfish (nav-enemy)
;   ()
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; village-obs-L1
; (deftype village-fish (process-drawable)
;   ((~Tchild-count int8  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype villa-fisha (village-fish)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype villa-fishb (village-fish)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype cyclegen (structure)
;   ((output float  :offset-assert 0)
;    (inc    float  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; village-obs-L1
; (deftype hutlamp (process-drawable)
;   ((~Tpivot basic            :offset-assert 176)
;    (~Tclock cyclegen :inline :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-L1
; (deftype revcycleprop (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; village-obs-L1
; (deftype revcycle (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; village-obs-L1
; (deftype villagea-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; village-obs-VI1
; (deftype windmill-sail (process-drawable)
;   ((~Tsync         sync-info  :inline :offset-assert 176)
;    (~Tblade-normal vector     :inline :offset-assert 192)
;    (~Torig-quat    quaternion :inline :offset-assert 208)
;    (~Talt-actor    basic              :offset-assert 224)
;    (~Tpart2        basic              :offset-assert 228)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype sagesail (process-drawable)
;   ((~Tsync         sync-info  :inline :offset-assert 176)
;    (~Tblade-normal vector     :inline :offset-assert 192)
;    (~Torig-quat    quaternion :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype windspinner (process-drawable)
;   ((~Tblade-normal vector     :inline :offset-assert 176)
;    (~Torig-quat    quaternion :inline :offset-assert 192)
;    (~Tangle        float              :offset-assert 208)
;    (~Tangle-vel    float              :offset-assert 212)
;    )
;   :method-count-assert 20
;   :size-assert         #xd8
;   :flag-assert         #x14007000d8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype mayorgears (process-drawable)
;   ((~Talt-actor basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype reflector-middle (process-drawable)
;   ((~Treflector-trans      vector :inline :offset-assert 176)
;    (~Tnext-reflector-trans vector :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype reflector-end (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype villa-starfish (process-drawable)
;   ((~Tchild-count int8  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype starfish (nav-enemy)
;   ()
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; village-obs-VI1
; (deftype village-fish (process-drawable)
;   ((~Tchild-count int8  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype villa-fisha (village-fish)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype villa-fishb (village-fish)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype cyclegen (structure)
;   ((output float  :offset-assert 0)
;    (inc    float  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; village-obs-VI1
; (deftype hutlamp (process-drawable)
;   ((~Tpivot basic            :offset-assert 176)
;    (~Tclock cyclegen :inline :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village-obs-VI1
; (deftype revcycleprop (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; village-obs-VI1
; (deftype revcycle (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; village-obs-VI1
; (deftype villagea-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; fishermans-boat
; (deftype boat-stabilizer (structure)
;   ((local-pos vector :inline :offset-assert 0)
;    (normal    vector :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; ;; fishermans-boat
; (deftype vehicle-path (structure)
;   ((point-array UNKNOWN 10 :offset-assert 0)
;    (point-count int32      :offset-assert 160)
;    )
;   :method-count-assert 14
;   :size-assert         #xa4
;   :flag-assert         #xe000000a4
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     )
;   )

; ;; fishermans-boat
; (deftype vehicle-controller (structure)
;   ((path                   vehicle-path         :offset-assert 0)
;    (turning-radius-table   uint32               :offset-assert 4)
;    (throttle-control-table uint32               :offset-assert 8)
;    (table-step             float                :offset-assert 12)
;    (table-length           int32                :offset-assert 16)
;    (circle-radius          float                :offset-assert 20)
;    (throttle               float                :offset-assert 24)
;    (steering               float                :offset-assert 28)
;    (path-dest-index        int8                 :offset-assert 32)
;    (left-circle            int8                 :offset-assert 33)
;    (path-dest-point        vector       :inline :offset-assert 48)
;    (path-dest-velocity     vector       :inline :offset-assert 64)
;    (dest-circle            vector       :inline :offset-assert 80)
;    (target-point           vector       :inline :offset-assert 96)
;    (sample-dir             vector       :inline :offset-assert 112)
;    (sample-time            uint64               :offset-assert 128)
;    (sample-index           int32                :offset-assert 136)
;    )
;   :method-count-assert 17
;   :size-assert         #x8c
;   :flag-assert         #x110000008c
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     )
;   )

; ;; fishermans-boat
; (deftype fishermans-boat (rigid-body-platform)
;   ((~Tstabilizer-array        UNKNOWN            2       :offset-assert 736)
;    (~Tengine-thrust-local-pos vector             :inline :offset-assert 800)
;    (~Tignition                basic                      :offset-assert 816)
;    (~Tengine-thrust           float                      :offset-assert 820)
;    (~Tpropeller               basic                      :offset-assert 824)
;    (~Tdock-point              vector             :inline :offset-assert 832)
;    (~Tdest-dir                vector             :inline :offset-assert 848)
;    (~Tdock-point-index        int8                       :offset-assert 864)
;    (~Tauto-pilot              basic                      :offset-assert 868)
;    (~Tanchored                basic                      :offset-assert 872)
;    (~Twaiting-for-player      basic                      :offset-assert 876)
;    (~Tplayer-riding           basic                      :offset-assert 880)
;    (~Tboat-path               vehicle-path       :inline :offset-assert 896)
;    (~Tcam-tracker             uint64                     :offset-assert 1064)
;    (~Tplayer-attack-id        int32                      :offset-assert 696)
;    (~Tkill-player             basic                      :offset-assert 1076)
;    (~Tengine-sound-id         uint32                     :offset-assert 1080)
;    (~Tengine-sound-envelope   float                      :offset-assert 1084)
;    (~Tdebug-draw              basic                      :offset-assert 1088)
;    (~Tdebug-path-record       basic                      :offset-assert 1092)
;    (~Tdebug-path-playback     basic                      :offset-assert 1096)
;    (~Tmeasure-parameters      basic                      :offset-assert 1100)
;    (~Tcontroller              vehicle-controller :inline :offset-assert 1104)
;    (~Tanim                    basic                      :offset-assert 1244)
;    (~Told-target-pos          transformq         :inline :offset-assert 1248)
;    (~Tevilbro                 uint64                     :offset-assert 1296)
;    (~Tevilsis                 uint64                     :offset-assert 1304)
;    )
;   :method-count-assert 35
;   :size-assert         #x520
;   :flag-assert         #x2304b00520
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; village1-part
; (deftype villagea-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

; ;; sequence-a-village1
; (deftype sequenceA-village1 (process-taskable)
;   ((~Tboat uint64  :offset-assert 384)
;    (~Tside uint64  :offset-assert 392)
;    )
;   :method-count-assert 53
;   :size-assert         #x190
;   :flag-assert         #x3501200190
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; training-obs
; (deftype training-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; training-obs
; (deftype training-cam (process)
;   ((~Troot       basic   :offset-assert 112)
;    (~Trange      meters  :offset-assert 116)
;    (~Tindex      int32   :offset-assert 120)
;    (~Tstate-time uint64  :offset-assert 128)
;    )
;   :method-count-assert 15
;   :size-assert         #x88
;   :flag-assert         #xf00200088
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; training-obs
; (deftype tra-pontoon (rigid-body-platform)
;   ((~Tanchor-point vector :inline :offset-assert 736)
;    )
;   :method-count-assert 35
;   :size-assert         #x2f0
;   :flag-assert         #x23028002f0
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; training-obs
; (deftype tra-iris-door (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; training-obs
; (deftype scarecrow-a (process-drawable)
;   ((~Tincomming-attack-id uint64         :offset-assert 176)
;    (~Tintersection        vector :inline :offset-assert 192)
;    )
;   :method-count-assert 22
;   :size-assert         #xd0
;   :flag-assert         #x16006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; training-obs
; (deftype scarecrow-b (process-drawable)
;   ((~Tincomming-attack-id uint64         :offset-assert 176)
;    (~Tintersection        vector :inline :offset-assert 192)
;    )
;   :method-count-assert 22
;   :size-assert         #xd0
;   :flag-assert         #x16006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; training-part
; (deftype training-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; misty-obs
; (deftype boatpaddle (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; misty-obs
; (deftype windturbine (process-drawable)
;   ((~Tspawn-particle-enable basic  :offset-assert 176)
;    (~Tangle-speed           float  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; misty-obs
; (deftype mis-bone-bridge (process-drawable)
;   ((~Tparticle-group   basic  :offset-assert 176)
;    (~Tplayer-attack-id int32  :offset-assert 180)
;    (~Tfall-anim-index  int32  :offset-assert 184)
;    (~Thit-points       int8   :offset-assert 188)
;    )
;   :method-count-assert 20
;   :size-assert         #xbd
;   :flag-assert         #x14005000bd
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; misty-obs
; (deftype breakaway (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; misty-obs
; (deftype breakaway-right (breakaway)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; misty-obs
; (deftype breakaway-mid (breakaway)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; misty-obs
; (deftype breakaway-left (breakaway)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; misty-obs
; (deftype bone-platform (rigid-body-platform)
;   ((~Tanchor-point vector :inline :offset-assert 736)
;    )
;   :method-count-assert 35
;   :size-assert         #x2f0
;   :flag-assert         #x23028002f0
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; misty-obs
; (deftype mistycam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; misty-obs
; (deftype misty-battlecontroller (battlecontroller)
;   ()
;   :method-count-assert 29
;   :size-assert         #x27c
;   :flag-assert         #x1d0210027c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; ;; misty-obs
; (deftype boat-fuelcell (process-drawable)
;   ((~Tplay-cutscene? basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; misty-warehouse
; (deftype silostep (process-drawable)
;   ((~Tanim-limit  float   :offset-assert 176)
;    (~Tcam-tracker uint64  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; misty-warehouse
; (deftype rounddoor (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; misty-conveyor
; (deftype keg-conveyor (process-drawable)
;   ((~Tpivot basic              :offset-assert 176)
;    (~Tquat  quaternion :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; misty-conveyor
; (deftype keg-conveyor-paddle (process-drawable)
;   ((~Tobject-on-paddle uint32            :offset-assert 176)
;    (~Tsync             sync-info :inline :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; misty-conveyor
; (deftype keg (process-drawable)
;   ((~Tsync-offset         float                 :offset-assert 176)
;    (~Tkeg-behavior        int8                  :offset-assert 180)
;    (~Tpath-position       vector        :inline :offset-assert 192)
;    (~Tshadow-enable-plane vector        :inline :offset-assert 208)
;    (~Tsmush               smush-control :inline :offset-assert 224)
;    (~Tsound-id            uint32                :offset-assert 256)
;    )
;   :method-count-assert 20
;   :size-assert         #x104
;   :flag-assert         #x1400a00104
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; mud
; (deftype mud (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; muse
; (deftype muse (nav-enemy)
;   ((~Tcurrent-path-index float              :offset-assert 400)
;    (~Tprev-path-index    float              :offset-assert 404)
;    (~Tdest-path-index    float              :offset-assert 408)
;    (~Tplayer-path-index  float              :offset-assert 412)
;    (~Tmax-path-index     float              :offset-assert 416)
;    (~Tsprint-distance    float              :offset-assert 420)
;    (~Tdest-point         vector     :inline :offset-assert 432)
;    (~Tanim               basic              :offset-assert 448)
;    (~Tvictory-anim       basic              :offset-assert 452)
;    (~Told-target-pos     transformq :inline :offset-assert 464)
;    )
;   :method-count-assert 76
;   :size-assert         #x200
;   :flag-assert         #x4c01900200
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; muse
; (deftype point-on-path-segment-info (structure)
;   ((point               vector  :inline :offset-assert 0)
;    (segment             UNKNOWN 2       :offset-assert 16)
;    (dir                 vector  :inline :offset-assert 48)
;    (nearest-point       vector  :inline :offset-assert 64)
;    (segment-length      float           :offset-assert 80)
;    (distance-to-segment float           :offset-assert 84)
;    (parametric-index    float           :offset-assert 88)
;    )
;   :method-count-assert 9
;   :size-assert         #x5c
;   :flag-assert         #x90000005c
;   )

; ;; bonelurker
; (deftype bonelurker (nav-enemy)
;   ((~Tbump-player-time uint64  :offset-assert 400)
;    )
;   :method-count-assert 76
;   :size-assert         #x198
;   :flag-assert         #x4c01300198
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; quicksandlurker
; (deftype quicksandlurker-missile (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; quicksandlurker
; (deftype quicksandlurker-missile-init-data (structure)
;   ((position vector  :offset-assert 0)
;    (velocity vector  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; quicksandlurker
; (deftype quicksandlurker (process-drawable)
;   ((~Toriginal-position vector :inline :offset-assert 176)
;    (~Ty-offset          float          :offset-assert 192)
;    (~Ttheta-angle       float          :offset-assert 196)
;    (~Tradial-offset     float          :offset-assert 200)
;    (~Tbob-angle         float          :offset-assert 204)
;    (~Tmud-entity        basic          :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; misty-teetertotter
; (deftype teetertotter (process-drawable)
;   ((~Tlaunched-player   basic  :offset-assert 176)
;    (~Tin-launch-window  basic  :offset-assert 180)
;    (~Trock-is-dangerous basic  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; balloonlurker
; (deftype balloonlurker-bank (basic)
;   ((buoyancy-depth-offset       meters  :offset-assert 4)
;    (player-mass                 float   :offset-assert 8)
;    (rudder-factor               float   :offset-assert 12)
;    (max-engine-thrust           float   :offset-assert 16)
;    (max-rudder-deflection-angle float   :offset-assert 20)
;    (throttle-factor             float   :offset-assert 24)
;    (throttle-distance           float   :offset-assert 28)
;    (throttle-close-distance     float   :offset-assert 32)
;    (explosion-force             float   :offset-assert 36)
;    (mine-weight                 float   :offset-assert 40)
;    )
;   :method-count-assert 9
;   :size-assert         #x2c
;   :flag-assert         #x90000002c
;   )

; ;; balloonlurker
; (deftype balloonlurker (rigid-body-platform)
;   ((~Texplosion-force-position vector  :inline :offset-assert 736)
;    (~Texplosion-force          vector  :inline :offset-assert 752)
;    (~Texplosion                basic           :offset-assert 768)
;    (~Texplosion-joint-index    UNKNOWN 2       :offset-assert 772)
;    (~Tvulnerable               basic           :offset-assert 776)
;    (~Twater-y                  float           :offset-assert 780)
;    (~Tpropeller                basic           :offset-assert 784)
;    (~Trudder                   basic           :offset-assert 788)
;    (~Tmine                     UNKNOWN 2       :offset-assert 792)
;    (~Tbuoyancy-factor          float           :offset-assert 800)
;    (~Trudder-control           float           :offset-assert 804)
;    (~Tthrottle-control         float           :offset-assert 808)
;    (~Tengine-thrust            float           :offset-assert 812)
;    (~Tdest-point               vector  :inline :offset-assert 816)
;    (~Tdest-point-old           vector  :inline :offset-assert 832)
;    (~Tdest-index               int8            :offset-assert 848)
;    (~Tauto-pilot               basic           :offset-assert 852)
;    (~Tdead                     basic           :offset-assert 856)
;    (~Tanim-frame               float           :offset-assert 860)
;    (~Tengine-sound-id          uint32          :offset-assert 864)
;    (~Tpedal-sound-id           uint32          :offset-assert 868)
;    (~Tframe-count              int8            :offset-assert 872)
;    )
;   :method-count-assert 35
;   :size-assert         #x369
;   :flag-assert         #x2303000369
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; balloonlurker
; (deftype balloonlurker-pilot (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; misty-part
; (deftype misty-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; sidekick-human
; (deftype sequenceA (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; ;; sidekick-human
; (deftype sequenceB (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-taskable) parent was UNKNOWN
;   )

; ;; sidekick-human
; (deftype sequenceC (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-taskable) parent was UNKNOWN
;   )

; ;; sidekick-human
; (deftype army-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; ;; firecanyon-part
; (deftype firecanyon-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; assistant-firecanyon
; (deftype assistant-firecanyon (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; village2-part
; (deftype villageb-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

; ;; village2-obs
; (deftype village2cam (pov-camera)
;   ((~Tseq uint64  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe8
;   :flag-assert         #x1e008000e8
;   ;; inherited inspect of pov-camera
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; village2-obs
; (deftype pontoon (rigid-body-platform)
;   ((~Tanchor-point vector :inline :offset-assert 736)
;    (~Ttask         uint8          :offset-assert 752)
;    (~Talt-task     uint8          :offset-assert 753)
;    )
;   :method-count-assert 35
;   :size-assert         #x2f2
;   :flag-assert         #x23029002f2
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; village2-obs
; (deftype pontoonfive (pontoon)
;   ()
;   :method-count-assert 35
;   :size-assert         #x2f2
;   :flag-assert         #x23029002f2
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; village2-obs
; (deftype pontoonten (pontoon)
;   ()
;   :method-count-assert 35
;   :size-assert         #x2f2
;   :flag-assert         #x23029002f2
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; village2-obs
; (deftype allpontoons (process-drawable)
;   ((~Ttask uint8  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village2-obs
; (deftype fireboulder (process-drawable)
;   ((~Ttracker uint64  :offset-assert 176)
;    (~Ttask    uint8   :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xb9
;   :flag-assert         #x14005000b9
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village2-obs
; (deftype ceilingflag (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village2-obs
; (deftype exit-chamber-dummy (process-drawable)
;   ((~Torig-trans   vector :inline :offset-assert 176)
;    (~Tfcell-handle uint64         :offset-assert 192)
;    )
;   :method-count-assert 21
;   :size-assert         #xc8
;   :flag-assert         #x15006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; village2-obs
; (deftype ogreboss-village2 (process-drawable)
;   ((~Tboulder uint64  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village2-obs
; (deftype villageb-ogreboss (ogreboss-village2)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; village2-obs
; (deftype villageb-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; gambler
; (deftype gambler (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; warrior
; (deftype warrior (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; geologist
; (deftype geologist (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; swamp-blimp
; (deftype swamp-blimp-bank (basic)
;   ((arm-index                 int32  :offset-assert 4)
;    (pause-before-dropping-arm int32  :offset-assert 8)
;    (rise-per-break            float  :offset-assert 12)
;    (arm-sink-wait             float  :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x14
;   :flag-assert         #x900000014
;   )

; ;; swamp-blimp
; (deftype tetherrock-info (structure)
;   ((rock-camera       basic  :offset-assert 0)
;    (arm-camera        basic  :offset-assert 4)
;    (blimp-rp          int32  :offset-assert 8)
;    (other-rp          int32  :offset-assert 12)
;    (connected-to-rock basic  :offset-assert 16)
;    (damping           float  :offset-assert 20)
;    )
;   :method-count-assert 9
;   :size-assert         #x18
;   :flag-assert         #x900000018
;   )

; ;; swamp-blimp
; (deftype swamp-rope-rand-float (structure)
;   ((min-time int32  :offset-assert 0)
;    (max-time int32  :offset-assert 4)
;    (max-val  float  :offset-assert 8)
;    (timer    int32  :offset-assert 12)
;    (value    float  :offset-assert 16)
;    )
;   :method-count-assert 11
;   :size-assert         #x14
;   :flag-assert         #xb00000014
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; ;; swamp-blimp
; (deftype swamp-rope-oscillator (structure)
;   ((target  float  :offset-assert 0)
;    (value   float  :offset-assert 4)
;    (vel     float  :offset-assert 8)
;    (accel   float  :offset-assert 12)
;    (max-vel float  :offset-assert 16)
;    (damping float  :offset-assert 20)
;    )
;   :method-count-assert 11
;   :size-assert         #x18
;   :flag-assert         #xb00000018
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; ;; swamp-blimp
; (deftype swamp-blimp-rand-vector (structure)
;   ((min-time int32          :offset-assert 0)
;    (max-time int32          :offset-assert 4)
;    (xz-max   float          :offset-assert 8)
;    (y-max    float          :offset-assert 12)
;    (timer    int32          :offset-assert 16)
;    (value    vector :inline :offset-assert 32)
;    )
;   :method-count-assert 11
;   :size-assert         #x30
;   :flag-assert         #xb00000030
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; ;; swamp-blimp
; (deftype swamp-blimp-oscillator (structure)
;   ((target  vector :inline :offset-assert 0)
;    (value   vector :inline :offset-assert 16)
;    (vel     vector :inline :offset-assert 32)
;    (accel   float          :offset-assert 48)
;    (max-vel float          :offset-assert 52)
;    (damping float          :offset-assert 56)
;    )
;   :method-count-assert 11
;   :size-assert         #x3c
;   :flag-assert         #xb0000003c
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; ;; swamp-blimp
; (deftype swamp-tetherrock (process-drawable)
;   ((~Ttension     float              :offset-assert 176)
;    (~Ttension-pt  vector     :inline :offset-assert 192)
;    (~Tblimp       basic              :offset-assert 208)
;    (~Trot-at-init quaternion :inline :offset-assert 224)
;    (~Thits        int32              :offset-assert 240)
;    )
;   :method-count-assert 20
;   :size-assert         #xf4
;   :flag-assert         #x14009000f4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; swamp-blimp
; (deftype precursor-arm (process-drawable)
;   ((~Ty-init    float          :offset-assert 176)
;    (~Ty-offset  float          :offset-assert 180)
;    (~Trot-speed float          :offset-assert 184)
;    (~Trot-dist  float          :offset-assert 188)
;    (~Trot-base  float          :offset-assert 192)
;    (~Trot-t     float          :offset-assert 196)
;    (~Tinit-mat  matrix :inline :offset-assert 208)
;    (~Ttension   float          :offset-assert 272)
;    )
;   :method-count-assert 20
;   :size-assert         #x114
;   :flag-assert         #x1400b00114
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; swamp-blimp
; (deftype swamp-rope (process-drawable)
;   ((~Tparent-rp    int32                         :offset-assert 176)
;    (~Tother-entity basic                         :offset-assert 180)
;    (~Tother-rp     int32                         :offset-assert 184)
;    (~Told-scale    float                         :offset-assert 188)
;    (~Tframe        swamp-rope-oscillator :inline :offset-assert 192)
;    (~Tother-pos    vector                :inline :offset-assert 224)
;    (~Tscale-base   float                         :offset-assert 240)
;    (~Tbase-vec     vector                :inline :offset-assert 256)
;    (~Tscale-t      float                         :offset-assert 272)
;    (~Tx-t          float                         :offset-assert 276)
;    (~Tz-t          float                         :offset-assert 280)
;    (~Trot-speed    float                         :offset-assert 284)
;    )
;   :method-count-assert 21
;   :size-assert         #x120
;   :flag-assert         #x1500b00120
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; swamp-blimp
; (deftype swamp-blimp (process-drawable)
;   ((~Tthe-ropes               UNKNOWN                 5       :offset-assert 176)
;    (~Tarm-timer               int32                           :offset-assert 216)
;    (~Ttrans-at-init           vector                  :inline :offset-assert 224)
;    (~Trot-at-init             quaternion              :inline :offset-assert 240)
;    (~Ty-vel                   float                           :offset-assert 256)
;    (~Ty-offset                float                           :offset-assert 260)
;    (~Ty-offset-target         float                           :offset-assert 264)
;    (~Tmain-tilt-rand          swamp-blimp-rand-vector :inline :offset-assert 272)
;    (~Tmain-tilt-oscillator    swamp-blimp-oscillator  :inline :offset-assert 320)
;    (~Tgondola-tilt-oscillator swamp-blimp-oscillator  :inline :offset-assert 384)
;    (~Tpos-rand                swamp-blimp-rand-vector :inline :offset-assert 448)
;    (~Tpos-oscillator          swamp-blimp-oscillator  :inline :offset-assert 496)
;    (~Tscale-rand              swamp-rope-rand-float   :inline :offset-assert 556)
;    (~Tscale-oscillator        swamp-rope-oscillator   :inline :offset-assert 576)
;    (~Tgondola                 basic                           :offset-assert 600)
;    (~Tbag                     basic                           :offset-assert 604)
;    )
;   :method-count-assert 20
;   :size-assert         #x260
;   :flag-assert         #x1401f00260
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; sage-bluehut
; (deftype assistant-bluehut (process-taskable)
;   ((~Tsound-id   uint32  :offset-assert 380)
;    (~Tjaws       uint64  :offset-assert 384)
;    (~Tsage       basic   :offset-assert 392)
;    (~Tim-talking basic   :offset-assert 396)
;    )
;   :method-count-assert 53
;   :size-assert         #x190
;   :flag-assert         #x3501200190
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; sage-bluehut
; (deftype sage-bluehut (process-taskable)
;   ((~Treminder-played basic  :offset-assert 380)
;    (~Tassistant       basic  :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x184
;   :flag-assert         #x3501200184
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; flutflut-bluehut
; (deftype flutflut-bluehut (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; assistant-village2
; (deftype assistant-levitator (process-taskable)
;   ((~Tboulder  basic     :offset-assert 380)
;    (~Tparticle UNKNOWN 4 :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x190
;   :flag-assert         #x3501200190
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; sunken-elevator
; (deftype sunken-elevator (plat-button)
;   ((~Tplay-at-top-going-up-camera? basic  :offset-assert 240)
;    (~Tteleport-if-below-y          float  :offset-assert 244)
;    (~Tteleport-if-above-y          float  :offset-assert 248)
;    )
;   :method-count-assert 33
;   :size-assert         #xfc
;   :flag-assert         #x21009000fc
;   ;; inherited inspect of plat-button
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; swamp-obs
; (deftype swamp-spike (process-drawable)
;   ((~Tsync      sync-info :inline :offset-assert 176)
;    (~Topen-gate basic             :offset-assert 184)
;    (~Tdangerous basic             :offset-assert 188)
;    )
;   :method-count-assert 21
;   :size-assert         #xc0
;   :flag-assert         #x15005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; swamp-obs
; (deftype swampgate (swamp-spike)
;   ()
;   :method-count-assert 21
;   :size-assert         #xc0
;   :flag-assert         #x15005000c0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; swamp-obs
; (deftype balance-plat (process-drawable)
;   ((~Ty-travel float  :offset-assert 176)
;    (~Ty-init   float  :offset-assert 180)
;    (~Ty-offset float  :offset-assert 184)
;    (~Ty-vel    float  :offset-assert 188)
;    (~Ty-accel  float  :offset-assert 192)
;    (~Tgot-grow basic  :offset-assert 196)
;    )
;   :method-count-assert 20
;   :size-assert         #xc8
;   :flag-assert         #x14006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; swamp-obs
; (deftype swamp-rock (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; swamp-obs
; (deftype tar-plat (rigid-body-platform)
;   ((~Tanchor-point vector :inline :offset-assert 736)
;    (~Tfloat-height float          :offset-assert 752)
;    )
;   :method-count-assert 35
;   :size-assert         #x2f4
;   :flag-assert         #x23029002f4
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; swamp-obs
; (deftype swamp-barrel (barrel)
;   ()
;   :method-count-assert 30
;   :size-assert         #x100
;   :flag-assert         #x1e00900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; swamp-obs
; (deftype swampcam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; swamp-obs
; (deftype swamp-battlecontroller (battlecontroller)
;   ()
;   :method-count-assert 29
;   :size-assert         #x27c
;   :flag-assert         #x1d0210027c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; ;; swamp-bat
; (deftype swamp-bat-idle-path (structure)
;   ((origin vector :inline :offset-assert 0)
;    (x-axis vector :inline :offset-assert 16)
;    (y-axis vector :inline :offset-assert 32)
;    )
;   :method-count-assert 10
;   :size-assert         #x30
;   :flag-assert         #xa00000030
;   (:methods
;     (dummy-9 () none 9)
;     )
;   )

; ;; swamp-bat
; (deftype swamp-bat (process-drawable)
;   ((~Tpath-origin         vector  :inline :offset-assert 176)
;    (~Tidle-position-angle UNKNOWN 8       :offset-assert 192)
;    (~Tpath-select-plane   UNKNOWN 2       :offset-assert 224)
;    (~Tpath-list           UNKNOWN 2       :offset-assert 256)
;    (~Tpath-select         int8            :offset-assert 264)
;    (~Tslave-count         int8            :offset-assert 265)
;    (~Tpath-count          int8            :offset-assert 266)
;    )
;   :method-count-assert 20
;   :size-assert         #x10b
;   :flag-assert         #x1400a0010b
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; swamp-bat
; (deftype swamp-bat-slave (process-drawable)
;   ((~Tsync                sync-info           :inline :offset-assert 176)
;    (~Tidle-anim-speed     float                       :offset-assert 184)
;    (~Tstrafe-envelope     float                       :offset-assert 188)
;    (~Tstrafe-distance     float                       :offset-assert 192)
;    (~Tpath-point-count    float                       :offset-assert 196)
;    (~Tidle-path           swamp-bat-idle-path :inline :offset-assert 208)
;    (~Tidle-position       vector              :inline :offset-assert 256)
;    (~Tidle-position-index int8                        :offset-assert 272)
;    (~Tpath-select         int8                        :offset-assert 273)
;    (~Tlaunch-ready        basic                       :offset-assert 276)
;    )
;   :method-count-assert 21
;   :size-assert         #x118
;   :flag-assert         #x1500b00118
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; swamp-rat
; (deftype swamp-rat (nav-enemy)
;   ((~Tup-vector          vector :inline :offset-assert 400)
;    (~Tstate-float        float          :offset-assert 416)
;    (~Tstate-vector       vector :inline :offset-assert 432)
;    (~Tfree-time          uint64         :offset-assert 360)
;    (~Twiggle-time        uint64         :offset-assert 456)
;    (~Twiggle-angle       float          :offset-assert 464)
;    (~Tdelta-wiggle-angle float          :offset-assert 468)
;    (~Twiggle-factor      float          :offset-assert 472)
;    (~Tmin-height         float          :offset-assert 476)
;    (~Tchase-rest-time    uint64         :offset-assert 480)
;    (~Ttarget-nav-time    uint64         :offset-assert 488)
;    )
;   :method-count-assert 76
;   :size-assert         #x1f0
;   :flag-assert         #x4c018001f0
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; swamp-rat-nest
; (deftype swamp-rat-nest (process-drawable)
;   ((~Tdummy               uint32  :offset-assert 176)
;    (~Tdamaged             basic   :offset-assert 180)
;    (~Tdummy-type          int8    :offset-assert 184)
;    (~Trat-count           int8    :offset-assert 185)
;    (~Thit-points          int8    :offset-assert 186)
;    (~Tdefensive-rat-count int8    :offset-assert 187)
;    (~Tspawn-period        float   :offset-assert 188)
;    (~Tspawn-period-scale  float   :offset-assert 192)
;    (~Ttest-interval       uint64  :offset-assert 200)
;    (~Tplayer-attack-id    int32   :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; swamp-rat-nest
; (deftype swamp-rat-nest-dummy (process-drawable)
;   ((~Ttop-sphere           sphere  :inline :offset-assert 176)
;    (~Tdeath-part           basic           :offset-assert 192)
;    (~Tspawn-joint-array    UNKNOWN 6       :offset-assert 196)
;    (~Tspawn-joint-count    int8            :offset-assert 202)
;    (~Tparticle-spawn-joint int8            :offset-assert 203)
;    )
;   :method-count-assert 22
;   :size-assert         #xcc
;   :flag-assert         #x16006000cc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; swamp-rat-nest
; (deftype swamp-rat-nest-dummy-a (swamp-rat-nest-dummy)
;   ()
;   :method-count-assert 22
;   :size-assert         #xcc
;   :flag-assert         #x16006000cc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; swamp-rat-nest
; (deftype swamp-rat-nest-dummy-b (swamp-rat-nest-dummy)
;   ()
;   :method-count-assert 22
;   :size-assert         #xcc
;   :flag-assert         #x16006000cc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; swamp-rat-nest
; (deftype swamp-rat-nest-dummy-c (swamp-rat-nest-dummy)
;   ()
;   :method-count-assert 22
;   :size-assert         #xcc
;   :flag-assert         #x16006000cc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; kermit
; (deftype joint-mod-tracker (basic)
;   ((target-pos               vector :inline :offset-assert 16)
;    (target-pos-func          basic          :offset-assert 32)
;    (inv-forward-scale-factor float          :offset-assert 36)
;    (forward-scale-control    float          :offset-assert 40)
;    (forward-scale-max        float          :offset-assert 44)
;    (process                  basic          :offset-assert 48)
;    (enable                   basic          :offset-assert 52)
;    (up-axis                  int8           :offset-assert 56)
;    (forward-axis             int8           :offset-assert 57)
;    )
;   :method-count-assert 9
;   :size-assert         #x3a
;   :flag-assert         #x90000003a
;   )

; ;; kermit
; (deftype kermit-pulse (process-drawable)
;   ((~Tsound-id uint32  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; kermit
; (deftype kermit (nav-enemy)
;   ((~Trotate-dir       vector :inline :offset-assert 400)
;    (~Tcharging-part    basic          :offset-assert 416)
;    (~Tairborne         basic          :offset-assert 420)
;    (~Ttongue-control   basic          :offset-assert 424)
;    (~Ttongue-pulse-pos float          :offset-assert 428)
;    (~Tmiss-count       int8           :offset-assert 432)
;    (~Tcharged-up       basic          :offset-assert 436)
;    (~Tsound-id         uint32         :offset-assert 440)
;    )
;   :method-count-assert 76
;   :size-assert         #x1bc
;   :flag-assert         #x4c015001bc
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; swamp-part
; (deftype swamp-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; billy
; (deftype billy (process-taskable)
;   ((~Tfarthy            uint64    :offset-assert 384)
;    (~Tpath-data         UNKNOWN 3 :offset-assert 392)
;    (~Tpath-snacks       basic     :offset-assert 392)
;    (~Tpath-starts       basic     :offset-assert 396)
;    (~Tpath-waypts       basic     :offset-assert 400)
;    (~Tpassed-last-stage basic     :offset-assert 404)
;    (~Tspawn-rats        basic     :offset-assert 408)
;    (~Tcurrent-wave      int32     :offset-assert 412)
;    (~Twave-start-time   uint64    :offset-assert 416)
;    (~Tnum-snacks        int32     :offset-assert 424)
;    (~Tnum-rats          int32     :offset-assert 428)
;    (~Tmax-rats          int32     :offset-assert 432)
;    (~Trat-speed         float     :offset-assert 436)
;    (~Toffending-rat     uint64    :offset-assert 440)
;    )
;   :method-count-assert 53
;   :size-assert         #x1c0
;   :flag-assert         #x35015001c0
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; billy
; (deftype billy-snack (process-drawable)
;   ((~Tnum-rats int32  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; billy
; (deftype billy-rat (swamp-rat)
;   ((~Tdest-type   uint64         :offset-assert 496)
;    (~Tsnack       uint64         :offset-assert 504)
;    (~Tdestination vector :inline :offset-assert 512)
;    (~Tbilly       uint32         :offset-assert 528)
;    )
;   :method-count-assert 76
;   :size-assert         #x214
;   :flag-assert         #x4c01b00214
;   ;; inherited inspect of swamp-rat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; cavecrystal-light
; (deftype cavecrystal-light (structure)
;   ((next           cavecrystal-light         :offset-assert 0)
;    (crystal-id     int32                     :offset-assert 4)
;    (intensity      float                     :offset-assert 8)
;    (fade-start     float                     :offset-assert 12)
;    (fade-end       float                     :offset-assert 16)
;    (crystal-handle uint64                    :offset-assert 24)
;    (trans          vector            :inline :offset-assert 32)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; ;; cavecrystal-light
; (deftype cavecrystal-light-control (basic)
;   ((active-count          int32               :offset-assert 4)
;    (head                  cavecrystal-light   :offset-assert 8)
;    (last-known-valid-time uint64              :offset-assert 16)
;    (crystal               UNKNOWN           7 :offset-assert 32)
;    )
;   :method-count-assert 15
;   :size-assert         #x170
;   :flag-assert         #xf00000170
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; maincave-obs
; (deftype maincavecam (pov-camera)
;   ((~Tseq uint64  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe8
;   :flag-assert         #x1e008000e8
;   ;; inherited inspect of pov-camera
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; maincave-obs
; (deftype cave-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; maincave-obs
; (deftype cavecrusher (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; maincave-obs
; (deftype cavetrapdoor (process-drawable)
;   ((~Tdelay-before-wiggle int32  :offset-assert 176)
;    )
;   :method-count-assert 22
;   :size-assert         #xb4
;   :flag-assert         #x16005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; maincave-obs
; (deftype caveflamepots (process-drawable)
;   ((~Tshove-up           float     :offset-assert 176)
;    (~Tcycle-speed        int32     :offset-assert 180)
;    (~Tcycle-pause        int32     :offset-assert 184)
;    (~Tcycle-offset       uint32    :offset-assert 188)
;    (~Twas-deadly?        basic     :offset-assert 192)
;    (~Tshould-play-sound? basic     :offset-assert 196)
;    (~Tlaunch-pos         UNKNOWN 2 :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; maincave-obs
; (deftype cavespatula (process-drawable)
;   ((~Tsync sync-info :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; maincave-obs
; (deftype cavespatulatwo (process-drawable)
;   ((~Tsync sync-info :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; maincave-obs
; (deftype caveelevator (process-drawable)
;   ((~Telev-mode               uint64                :offset-assert 176)
;    (~Telev-type               int32                 :offset-assert 184)
;    (~Tprev-frame-num          float                 :offset-assert 188)
;    (~Tlast-update-bounce-time uint64                :offset-assert 192)
;    (~Torig-trans              vector        :inline :offset-assert 208)
;    (~Tsync                    sync-info     :inline :offset-assert 224)
;    (~Tsmush                   smush-control :inline :offset-assert 232)
;    (~Tanim                    UNKNOWN       2       :offset-assert 264)
;    (~Twheel-ry-mat            matrix        :inline :offset-assert 272)
;    )
;   :method-count-assert 22
;   :size-assert         #x150
;   :flag-assert         #x1600e00150
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; maincave-part
; (deftype maincave-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; maincave-part
; (deftype darkcave-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; spiderwebs
; (deftype spiderwebs (process-drawable)
;   ((~Tspring-height meters  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; dark-crystal
; (deftype dark-crystal (process-drawable)
;   ((~Tcrystal-num           int32          :offset-assert 176)
;    (~Tunderwater?           basic          :offset-assert 180)
;    (~Texplode-danger-radius float          :offset-assert 184)
;    (~Tlit-color-mult        vector :inline :offset-assert 192)
;    (~Tlit-color-emissive    vector :inline :offset-assert 208)
;    (~Tunlit-color-mult      vector :inline :offset-assert 224)
;    (~Tunlit-color-emissive  vector :inline :offset-assert 240)
;    )
;   :method-count-assert 22
;   :size-assert         #x100
;   :flag-assert         #x1600900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; baby-spider
; (deftype baby-spider-spawn-params (structure)
;   ((hatched?                          basic   :offset-assert 0)
;    (fast-start?                       basic   :offset-assert 4)
;    (hack-move-above-ground?           basic   :offset-assert 8)
;    (die-if-not-visible?               basic   :offset-assert 12)
;    (pickup                            int32   :offset-assert 16)
;    (pickup-amount                     int32   :offset-assert 20)
;    (event-death                       basic   :offset-assert 24)
;    (delay-before-dying-if-not-visible uint64  :offset-assert 32)
;    )
;   :method-count-assert 11
;   :size-assert         #x28
;   :flag-assert         #xb00000028
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; ;; baby-spider
; (deftype baby-spider (nav-enemy)
;   ((~Tdie-if-not-visible?               basic          :offset-assert 400)
;    (~Thack-move-above-ground?           basic          :offset-assert 404)
;    (~Tstate-float                       float          :offset-assert 408)
;    (~Twiggle-angle                      float          :offset-assert 412)
;    (~Tdelta-wiggle-angle                float          :offset-assert 416)
;    (~Twiggle-factor                     float          :offset-assert 420)
;    (~Tevent-death                       basic          :offset-assert 424)
;    (~Tdelay-before-dying-if-not-visible uint64         :offset-assert 432)
;    (~Tchase-rest-time                   uint64         :offset-assert 440)
;    (~Ttarget-nav-time                   uint64         :offset-assert 448)
;    (~Tfree-time                         uint64         :offset-assert 360)
;    (~Twiggle-time                       uint64         :offset-assert 464)
;    (~Tlast-visible-time                 uint64         :offset-assert 472)
;    (~Tup-vector                         vector :inline :offset-assert 480)
;    (~Tstate-vector                      vector :inline :offset-assert 496)
;    )
;   :method-count-assert 76
;   :size-assert         #x200
;   :flag-assert         #x4c01900200
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; mother-spider-h
; (deftype mother-spider-leg (process-drawable)
;   ((~Tgravity     float          :offset-assert 176)
;    (~Ttransv      vector :inline :offset-assert 192)
;    (~Tfacing-rot  vector :inline :offset-assert 208)
;    (~Tfacing-rotv vector :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; mother-spider-h
; (deftype mother-spider-thread (structure)
;   ((joint-index int32  :offset-assert 0)
;    (trans-u     float  :offset-assert 4)
;    (swing-arc-u float  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; ;; mother-spider-h
; (deftype mother-spider-leg-info (structure)
;   ((joint-index0 int32  :offset-assert 0)
;    (joint-index1 int32  :offset-assert 4)
;    (cprim-index  int32  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; ;; mother-spider-h
; (deftype mother-spider-history (structure)
;   ((trans vector :inline :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; ;; mother-spider-h
; (deftype mother-spider-history-array (inline-array-class)
;   ((length           int32            :offset-assert 4)
;    (allocated-length int32            :offset-assert 8)
;    (data             UNKNOWN :dynamic :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; ;; mother-spider-h
; (deftype mother-spider (process-drawable)
;   ((~Tmode                           uint64          :offset-assert 176)
;    (~Tdamage                         int32           :offset-assert 184)
;    (~Tbaby-count                     int32           :offset-assert 188)
;    (~Tmax-baby-count                 int32           :offset-assert 192)
;    (~Tbirthing-counter               int32           :offset-assert 196)
;    (~Tspit-counter                   int32           :offset-assert 200)
;    (~Tleg-socket-part-mask           int32           :offset-assert 204)
;    (~Tdist-from-anchor               float           :offset-assert 208)
;    (~Ttarg-dist-from-anchor          float           :offset-assert 212)
;    (~Tidle-dist-from-anchor          float           :offset-assert 216)
;    (~Tplayer-sticky-dist-from-anchor float           :offset-assert 220)
;    (~Tmax-dist-from-anchor           float           :offset-assert 224)
;    (~Tactivate-xz-dist               float           :offset-assert 228)
;    (~Tdeactivate-xz-dist             float           :offset-assert 232)
;    (~Tmax-spit-xz-dist               float           :offset-assert 236)
;    (~Tmax-swing-radius               float           :offset-assert 240)
;    (~Tspin-vel                       float           :offset-assert 244)
;    (~Tthread-speed                   float           :offset-assert 248)
;    (~Tthread-vel                     float           :offset-assert 252)
;    (~Thistory                        basic           :offset-assert 256)
;    (~Thistory-len                    int32           :offset-assert 260)
;    (~Thistory-next-index             int32           :offset-assert 264)
;    (~Thit?                           basic           :offset-assert 268)
;    (~Tgoing-up?                      basic           :offset-assert 272)
;    (~Tcheck-z-thresh?                basic           :offset-assert 276)
;    (~Tactivate-z-thresh              float           :offset-assert 280)
;    (~Tdeactivate-z-thresh            float           :offset-assert 284)
;    (~Tspawned-time                   uint64          :offset-assert 288)
;    (~Tlast-update-time               uint64          :offset-assert 296)
;    (~Tspin-time                      uint64          :offset-assert 304)
;    (~Tlast-spit-time                 uint64          :offset-assert 312)
;    (~Tlast-player-in-air-time        uint64          :offset-assert 320)
;    (~Tstarted-birthing-time          uint64          :offset-assert 328)
;    (~Tneck                           basic           :offset-assert 336)
;    (~Tplayer-attack-id               uint64          :offset-assert 344)
;    (~Tleg-socket-part-time           UNKNOWN 6       :offset-assert 352)
;    (~Torient-rot                     vector  :inline :offset-assert 400)
;    (~Tanchor-trans                   vector  :inline :offset-assert 416)
;    (~Tthread-min-trans               vector  :inline :offset-assert 432)
;    (~Tswing-pos                      vector  :inline :offset-assert 448)
;    (~Tswing-base-pos                 vector  :inline :offset-assert 464)
;    (~Tswing-vel                      vector  :inline :offset-assert 480)
;    )
;   :method-count-assert 32
;   :size-assert         #x1f0
;   :flag-assert         #x20018001f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; ;; mother-spider-egg
; (deftype mother-spider-egg (process-drawable)
;   ((~Tanim-speed         float              :offset-assert 176)
;    (~Tpart2              basic              :offset-assert 180)
;    (~Tfalling-start-time uint64             :offset-assert 184)
;    (~Tfall-dest          vector     :inline :offset-assert 192)
;    (~Tfall-dest-normal   vector     :inline :offset-assert 208)
;    (~Tbroken-look        lod-set    :inline :offset-assert 224)
;    (~Ttraj               trajectory :inline :offset-assert 272)
;    (~Tshadow-pos         vector     :inline :offset-assert 320)
;    )
;   :method-count-assert 22
;   :size-assert         #x150
;   :flag-assert         #x1600e00150
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; mother-spider-proj
; (deftype mother-spider-proj (projectile)
;   ((~Tfacing-dir vector :inline :offset-assert 416)
;    )
;   :method-count-assert 29
;   :size-assert         #x1b0
;   :flag-assert         #x1d014001b0
;   ;; inherited inspect of projectile
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; ;; gnawer
; (deftype gnawer-falling-segment (process-drawable)
;   ((~Ttransv      vector :inline :offset-assert 176)
;    (~Tfacing-rot  vector :inline :offset-assert 192)
;    (~Tfacing-rotv vector :inline :offset-assert 208)
;    )
;   :method-count-assert 21
;   :size-assert         #xe0
;   :flag-assert         #x15007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; gnawer
; (deftype gnawer-segment-info (structure)
;   ((num-joints  int32     :offset-assert 0)
;    (joint-index UNKNOWN 8 :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; ;; gnawer
; (deftype gnawer-segment (structure)
;   ((place                      int32          :offset-assert 0)
;    (world-pos                  vector :inline :offset-assert 16)
;    (anim-to-local-trans-offset vector :inline :offset-assert 32)
;    (orient-mat                 matrix :inline :offset-assert 48)
;    )
;   :method-count-assert 9
;   :size-assert         #x70
;   :flag-assert         #x900000070
;   )

; ;; gnawer
; (deftype gnawer-route (structure)
;   ((src-pt-index      int32          :offset-assert 0)
;    (dest-pt-index     int32          :offset-assert 4)
;    (total-travel-time uint64         :offset-assert 8)
;    (src-ang           float          :offset-assert 16)
;    (dest-ang          float          :offset-assert 20)
;    (delta-ang         float          :offset-assert 24)
;    (surface-dist      float          :offset-assert 28)
;    (total-dist        float          :offset-assert 32)
;    (src-pt-offset     vector :inline :offset-assert 48)
;    (dest-pt-offset    vector :inline :offset-assert 64)
;    (surface-dir       vector :inline :offset-assert 80)
;    )
;   :method-count-assert 9
;   :size-assert         #x60
;   :flag-assert         #x900000060
;   )

; ;; gnawer
; (deftype gnawer (process-drawable)
;   ((~Thit-points     int32                :offset-assert 176)
;    (~Tgnawer-id      int32                :offset-assert 180)
;    (~Ttotal-money    int32                :offset-assert 184)
;    (~Tmoney-mask     uint32               :offset-assert 188)
;    (~Teco-green-mask uint32               :offset-assert 192)
;    (~Thidden?        basic                :offset-assert 196)
;    (~Tshow-damage?   basic                :offset-assert 200)
;    (~Troute-dist     float                :offset-assert 204)
;    (~Tspeed          float                :offset-assert 208)
;    (~Tanim-speed     float                :offset-assert 212)
;    (~Tpart2          basic                :offset-assert 216)
;    (~Tsound2         basic                :offset-assert 220)
;    (~Tlast-hit-time  uint64               :offset-assert 224)
;    (~Tpost-trans     vector       :inline :offset-assert 240)
;    (~Tfall-trans     vector       :inline :offset-assert 256)
;    (~Troute          gnawer-route :inline :offset-assert 272)
;    (~Tsegments       UNKNOWN      10      :offset-assert 368)
;    )
;   :method-count-assert 31
;   :size-assert         #x5d0
;   :flag-assert         #x1f056005d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     )
;   )

; ;; driller-lurker
; (deftype driller-lurker (process-drawable)
;   ((~Thit-player?             basic   :offset-assert 176)
;    (~Tplayed-drill-sound?     basic   :offset-assert 180)
;    (~Tmode                    uint64  :offset-assert 184)
;    (~Tpath-u                  float   :offset-assert 192)
;    (~Tpath-units-per-meter    float   :offset-assert 196)
;    (~Tpath-speed              float   :offset-assert 200)
;    (~Ttarg-path-speed         float   :offset-assert 204)
;    (~Tpath-dir                float   :offset-assert 208)
;    (~Tpath-ry                 float   :offset-assert 212)
;    (~Tfacing-ry               float   :offset-assert 216)
;    (~Tdrill-rz                float   :offset-assert 220)
;    (~Tdrill-speed             float   :offset-assert 224)
;    (~Tup-blend                float   :offset-assert 228)
;    (~Tplayer-path-u           float   :offset-assert 232)
;    (~Tambient-drilling-u      float   :offset-assert 236)
;    (~Ttimeout                 int32   :offset-assert 240)
;    (~Tneck                    basic   :offset-assert 244)
;    (~Tdrill                   basic   :offset-assert 248)
;    (~Tsound2                  basic   :offset-assert 252)
;    (~Tlast-update-time        uint64  :offset-assert 256)
;    (~Tlast-player-path-u-time uint64  :offset-assert 264)
;    (~Tstarted-chasing-time    uint64  :offset-assert 272)
;    (~Thit-player-time         uint64  :offset-assert 280)
;    (~Tplayer-attack-id        uint64  :offset-assert 288)
;    )
;   :method-count-assert 28
;   :size-assert         #x128
;   :flag-assert         #x1c00c00128
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

; ;; sunken-part
; (deftype sunken-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

; ;; target-tube
; (deftype tube-info (basic)
;   ((entity          basic          :offset-assert 4)
;    (tube            uint64         :offset-assert 8)
;    (downhill        vector :inline :offset-assert 16)
;    (centertube      vector :inline :offset-assert 32)
;    (downtube        vector :inline :offset-assert 48)
;    (sidetube        vector :inline :offset-assert 64)
;    (foretube        vector :inline :offset-assert 80)
;    (old-transv      vector :inline :offset-assert 96)
;    (mod-x           float          :offset-assert 112)
;    (mod-y           float          :offset-assert 116)
;    (start-time      uint64         :offset-assert 120)
;    (turn-anim-targ  float          :offset-assert 128)
;    (turn-anim-frame float          :offset-assert 132)
;    (turn-anim-vel   float          :offset-assert 136)
;    (tube-sound-id   uint32         :offset-assert 140)
;    (tube-sound-vol  float          :offset-assert 144)
;    )
;   :method-count-assert 9
;   :size-assert         #x94
;   :flag-assert         #x900000094
;   )

; ;; target-tube
; (deftype tube-bank (basic)
;   ()
;   :method-count-assert 9
;   :size-assert         #x4
;   :flag-assert         #x900000004
;   )

; ;; target-tube
; (deftype slide-control (process-drawable)
;   ((~Ttarget uint64         :offset-assert 176)
;    (~Tpos    float          :offset-assert 184)
;    (~Ttrans  vector :inline :offset-assert 192)
;    (~Trot    vector :inline :offset-assert 208)
;    (~Tside   vector :inline :offset-assert 224)
;    )
;   :method-count-assert 22
;   :size-assert         #xf0
;   :flag-assert         #x16008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; sunken-obs
; (deftype water-vol-deadly (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; sunken-obs
; (deftype side-to-side-plat (plat)
;   ((~Tpart-ry float  :offset-assert 264)
;    )
;   :method-count-assert 33
;   :size-assert         #x10c
;   :flag-assert         #x2100a0010c
;   ;; inherited inspect of plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; sunken-obs
; (deftype sunkencam (pov-camera)
;   ((~Tseq uint64  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe8
;   :flag-assert         #x1e008000e8
;   ;; inherited inspect of pov-camera
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; sunken-obs
; (deftype seaweed (process-drawable)
;   ((~Tanim-speed float  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; shover
; (deftype shover (process-drawable)
;   ((~Tshove-up float  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; square-platform
; (deftype square-platform (baseplat)
;   ((~Tplat-id           int32          :offset-assert 228)
;    (~Tpos-u             float          :offset-assert 232)
;    (~Twater-entity      basic          :offset-assert 236)
;    (~Tsplash-counter    int32          :offset-assert 240)
;    (~Tstart-splash-time uint64         :offset-assert 248)
;    (~Tpart2             basic          :offset-assert 256)
;    (~Tpart3             basic          :offset-assert 260)
;    (~Tpart4             basic          :offset-assert 264)
;    (~Tup-pos            vector :inline :offset-assert 272)
;    (~Tdown-pos          vector :inline :offset-assert 288)
;    )
;   :method-count-assert 28
;   :size-assert         #x130
;   :flag-assert         #x1c00c00130
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

; ;; square-platform
; (deftype square-platform-button (basebutton)
;   ()
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; ;; square-platform
; (deftype square-platform-master (process-drawable)
;   ((~Tbutton-id                int32          :offset-assert 176)
;    (~Tplat-id                  int32          :offset-assert 180)
;    (~Tplat-mask                uint32         :offset-assert 184)
;    (~Tplat-id-dir              int32          :offset-assert 188)
;    (~Twiggled?                 basic          :offset-assert 192)
;    (~Ttimeout                  uint64         :offset-assert 200)
;    (~Tlast-plat-activated-time uint64         :offset-assert 208)
;    (~Tdelay-til-wiggle         uint64         :offset-assert 216)
;    (~Tticker                   ticky  :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #x100
;   :flag-assert         #x1400900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; sun-iris-door
; (deftype sun-iris-door (process-drawable)
;   ((~Ttimeout                float              :offset-assert 176)
;    (~Tproximity?             basic              :offset-assert 180)
;    (~Tdirectional-proximity? basic              :offset-assert 184)
;    (~Tmove-to?               basic              :offset-assert 188)
;    (~Tlocked-by-task?        basic              :offset-assert 192)
;    (~Tclose-dist             float              :offset-assert 196)
;    (~Topen-dist              float              :offset-assert 200)
;    (~Tmove-to-pos            vector     :inline :offset-assert 208)
;    (~Toutward-vec            vector     :inline :offset-assert 224)
;    (~Tmove-to-quat           quaternion :inline :offset-assert 240)
;    )
;   :method-count-assert 22
;   :size-assert         #x100
;   :flag-assert         #x1600900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; orbit-plat
; (deftype orbit-plat-bottom (process-drawable)
;   ((~Tpart2 basic  :offset-assert 176)
;    )
;   :method-count-assert 21
;   :size-assert         #xb4
;   :flag-assert         #x15005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; orbit-plat
; (deftype orbit-plat (baseplat)
;   ((~Tother        basic          :offset-assert 228)
;    (~Trot-dir      float          :offset-assert 232)
;    (~Treset-trans  vector :inline :offset-assert 240)
;    (~Tis-reset?    basic          :offset-assert 256)
;    (~Treset-length float          :offset-assert 260)
;    (~Ttimeout      float          :offset-assert 264)
;    (~Tplat-status  uint64         :offset-assert 272)
;    )
;   :method-count-assert 29
;   :size-assert         #x118
;   :flag-assert         #x1d00b00118
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; ;; wedge-plats
; (deftype wedge-plat-master (process)
;   ((~Tcenter       vector :inline :offset-assert 112)
;    (~Trotspeed     float          :offset-assert 128)
;    (~Trotate-inner float          :offset-assert 132)
;    (~Trotate-outer float          :offset-assert 136)
;    )
;   :method-count-assert 14
;   :size-assert         #x8c
;   :flag-assert         #xe0020008c
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     )
;   )

; ;; wedge-plats
; (deftype wedge-plat (baseplat)
;   ((~Tmaster   basic  :offset-assert 228)
;    (~Tdistance float  :offset-assert 232)
;    (~Toffset   float  :offset-assert 236)
;    )
;   :method-count-assert 28
;   :size-assert         #xf0
;   :flag-assert         #x1c008000f0
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

; ;; wedge-plats
; (deftype wedge-plat-outer (wedge-plat)
;   ()
;   :method-count-assert 28
;   :size-assert         #xf0
;   :flag-assert         #x1c008000f0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

; ;; wall-plat
; (deftype wall-plat (process-drawable)
;   ((~Tuse-sync?       basic                    :offset-assert 176)
;    (~Textended-amount float                    :offset-assert 180)
;    (~Tin-trans        vector           :inline :offset-assert 192)
;    (~Tout-trans       vector           :inline :offset-assert 208)
;    (~Tsync            sync-info-paused :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; qbert-plat
; (deftype qbert-plat-on (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; qbert-plat
; (deftype qbert-plat (rigid-body-platform)
;   ((~Tanchor-point      vector :inline :offset-assert 736)
;    (~Tplat-id           int32          :offset-assert 752)
;    (~Ton?               basic          :offset-assert 756)
;    (~Tplayer-is-riding? basic          :offset-assert 760)
;    (~Tmaster            basic          :offset-assert 764)
;    )
;   :method-count-assert 35
;   :size-assert         #x300
;   :flag-assert         #x2302900300
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; qbert-plat
; (deftype qbert-plat-master (process-drawable)
;   ((~Tlast-plat-triggered             int32          :offset-assert 176)
;    (~Tplat-states                     uint32         :offset-assert 180)
;    (~Tplat-states-needed-to-open-door uint32         :offset-assert 184)
;    (~Tplayer-in-bounds?               basic          :offset-assert 188)
;    (~Tplayer-in-water?                basic          :offset-assert 192)
;    (~Tplay-door-cam?                  basic          :offset-assert 196)
;    (~Tpuzzle-beaten?                  basic          :offset-assert 200)
;    (~Tdoor                            basic          :offset-assert 204)
;    (~Tdoor-plat                       basic          :offset-assert 208)
;    (~Tbounds-start                    vector :inline :offset-assert 224)
;    (~Tbounds-end                      vector :inline :offset-assert 240)
;    )
;   :method-count-assert 21
;   :size-assert         #x100
;   :flag-assert         #x1500900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; steam-cap
; (deftype steam-cap-control-pt (structure)
;   ((trans  vector :inline :offset-assert 0)
;    (transv vector :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; ;; steam-cap
; (deftype steam-cap (process-drawable)
;   ((~Tdo-burst?         basic             :offset-assert 176)
;    (~Tdo-falling-sound? basic             :offset-assert 180)
;    (~Tdo-landing-sound? basic             :offset-assert 184)
;    (~Tbegin-travel-up   float             :offset-assert 188)
;    (~Tbegin-travel-down float             :offset-assert 192)
;    (~Tsync              sync-info :inline :offset-assert 196)
;    (~Tpart2             basic             :offset-assert 204)
;    (~Tpart3             basic             :offset-assert 208)
;    (~Tdown              vector    :inline :offset-assert 224)
;    (~Tup                vector    :inline :offset-assert 240)
;    (~Tcontrol-pt        UNKNOWN   3       :offset-assert 256)
;    )
;   :method-count-assert 22
;   :size-assert         #x160
;   :flag-assert         #x1600f00160
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; sun-exit-chamber
; (deftype blue-eco-charger-orb (process-drawable)
;   ((~Torbit-rot       vector :inline :offset-assert 176)
;    (~Torbit-rotv      vector :inline :offset-assert 192)
;    (~Ttarg-orbit-rotv vector :inline :offset-assert 208)
;    (~Trest-pos        vector :inline :offset-assert 224)
;    )
;   :method-count-assert 21
;   :size-assert         #xf0
;   :flag-assert         #x15008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; sun-exit-chamber
; (deftype blue-eco-charger (process-drawable)
;   ((~Tcharger-id int32  :offset-assert 176)
;    (~Topen-level float  :offset-assert 180)
;    (~Tmaster     basic  :offset-assert 184)
;    )
;   :method-count-assert 22
;   :size-assert         #xbc
;   :flag-assert         #x16005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; sun-exit-chamber
; (deftype exit-chamber-items (structure)
;   ((door-pos    vector     :inline :offset-assert 0)
;    (door-quat   quaternion :inline :offset-assert 16)
;    (button-pos  vector     :inline :offset-assert 32)
;    (button-quat quaternion :inline :offset-assert 48)
;    (fcell-pos   vector     :inline :offset-assert 64)
;    )
;   :method-count-assert 9
;   :size-assert         #x50
;   :flag-assert         #x900000050
;   )

; ;; sun-exit-chamber
; (deftype exit-chamber (process-drawable)
;   ((~Tchargers-active         uint32         :offset-assert 176)
;    (~Tmove-player?            basic          :offset-assert 180)
;    (~Tmove-fcell?             basic          :offset-assert 184)
;    (~Tplay-assistant-message? basic          :offset-assert 188)
;    (~Twave-scale              float          :offset-assert 192)
;    (~Tbutton                  uint32         :offset-assert 196)
;    (~Tdoor                    uint32         :offset-assert 200)
;    (~Tfcell-handle            uint64         :offset-assert 208)
;    (~Torig-trans              vector :inline :offset-assert 224)
;    (~Tlast-pos                vector :inline :offset-assert 240)
;    )
;   :method-count-assert 25
;   :size-assert         #x100
;   :flag-assert         #x1900900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     )
;   )

; ;; sun-exit-chamber
; (deftype exit-chamber-button (basebutton)
;   ()
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; ;; floating-launcher
; (deftype floating-launcher (baseplat)
;   ((~Ttrigger-height float   :offset-assert 228)
;    (~Tlauncher       uint32  :offset-assert 232)
;    )
;   :method-count-assert 27
;   :size-assert         #xec
;   :flag-assert         #x1b008000ec
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; sunken-water
; (deftype sunken-water (water-anim)
;   ((~Tuse-sync?             basic             :offset-assert 220)
;    (~Tplaying-deadly-sound? basic             :offset-assert 224)
;    (~Tdeadly-time           float             :offset-assert 228)
;    (~Tdeadly-fade           float             :offset-assert 232)
;    (~Tsync                  sync-info :inline :offset-assert 236)
;    (~Tsafe-color-mult       vector    :inline :offset-assert 256)
;    (~Tsafe-color-emissive   vector    :inline :offset-assert 272)
;    (~Tdeadly-color-mult     vector    :inline :offset-assert 288)
;    (~Tdeadly-color-emissive vector    :inline :offset-assert 304)
;    )
;   :method-count-assert 31
;   :size-assert         #x140
;   :flag-assert         #x1f00d00140
;   ;; inherited inspect of water-anim
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     )
;   )

; ;; whirlpool
; (deftype whirlpool (process-drawable)
;   ((~Tspin-ry          float                    :offset-assert 176)
;    (~Tspin-speed-idle  float                    :offset-assert 180)
;    (~Tspin-speed-delta float                    :offset-assert 184)
;    (~Tsync             sync-info-paused :inline :offset-assert 188)
;    )
;   :method-count-assert 21
;   :size-assert         #xcc
;   :flag-assert         #x15006000cc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; sunken-pipegame
; (deftype sunken-pipegame-button (basebutton)
;   ()
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; ;; sunken-pipegame
; (deftype sunken-pipegame-prize (structure)
;   ((puzzle-delay            uint64         :offset-assert 0)
;    (pipe-travel-time-to-far uint64         :offset-assert 8)
;    (pipe-travel-time-to-jar uint64         :offset-assert 16)
;    (actor-handle            uint64         :offset-assert 24)
;    (jar-pos                 vector :inline :offset-assert 32)
;    (far-pos                 vector :inline :offset-assert 48)
;    (sucked-up-jar-part-pos  vector :inline :offset-assert 64)
;    (sucked-up-far-part-pos  vector :inline :offset-assert 80)
;    (blown-out-jar-part-pos  vector :inline :offset-assert 96)
;    (blown-out-far-part-pos  vector :inline :offset-assert 112)
;    (sucked-up-part          basic          :offset-assert 128)
;    (blown-out-part          basic          :offset-assert 132)
;    )
;   :method-count-assert 9
;   :size-assert         #x88
;   :flag-assert         #x900000088
;   )

; ;; sunken-pipegame
; (deftype sunken-pipegame (process-drawable)
;   ((~Tabort-audio-if-beaten? basic           :offset-assert 176)
;    (~Tchallenges-mask        uint32          :offset-assert 180)
;    (~Tchallenge              int32           :offset-assert 184)
;    (~Tticker                 ticky   :inline :offset-assert 192)
;    (~Tbutton                 UNKNOWN 3       :offset-assert 224)
;    (~Tprize                  UNKNOWN 3       :offset-assert 240)
;    )
;   :method-count-assert 23
;   :size-assert         #x2a0
;   :flag-assert         #x17023002a0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; bully
; (deftype bully-broken-cage (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; bully
; (deftype bully (process-drawable)
;   ((~Thit-player?     basic   :offset-assert 176)
;    (~Tbounced?        basic   :offset-assert 180)
;    (~Tbounce-volume   int32   :offset-assert 184)
;    (~Tfacing-ry       float   :offset-assert 188)
;    (~Ttravel-ry       float   :offset-assert 192)
;    (~Tspeed-u         float   :offset-assert 196)
;    (~Tspin-vel        float   :offset-assert 200)
;    (~Ttravel-speed    float   :offset-assert 204)
;    (~Treaction-delay  uint64  :offset-assert 208)
;    (~Tstart-spin-time uint64  :offset-assert 216)
;    (~Tslow-down       uint64  :offset-assert 224)
;    (~Thit-player-time uint64  :offset-assert 232)
;    (~Tneck            basic   :offset-assert 240)
;    )
;   :method-count-assert 21
;   :size-assert         #xf4
;   :flag-assert         #x15009000f4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; double-lurker
; (deftype double-lurker-top (nav-enemy)
;   ((~Tfall-dest vector :inline :offset-assert 400)
;    )
;   :method-count-assert 76
;   :size-assert         #x1a0
;   :flag-assert         #x4c013001a0
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; double-lurker
; (deftype double-lurker (nav-enemy)
;   ((~Tknocked-back-speed  float   :offset-assert 400)
;    (~Tbuddy-on-shoulders? basic   :offset-assert 404)
;    (~Tdead?               basic   :offset-assert 408)
;    (~Tbuddy-dead?         basic   :offset-assert 412)
;    (~Tbuddy-handle        uint64  :offset-assert 416)
;    )
;   :method-count-assert 76
;   :size-assert         #x1a8
;   :flag-assert         #x4c014001a8
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; helix-water
; (deftype helix-slide-door (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; helix-water
; (deftype helix-button (process-drawable)
;   ((~Tmy-water     basic          :offset-assert 176)
;    (~Tmy-door      basic          :offset-assert 180)
;    (~Tfcell-handle uint64         :offset-assert 184)
;    (~Tdown-y       float          :offset-assert 192)
;    (~Tspawn-trans  vector :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; helix-water
; (deftype helix-dark-eco (dark-eco-pool)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; helix-water
; (deftype helix-water (process-drawable)
;   ((~Tlast-alt-actor-consumed int32   :offset-assert 176)
;    (~Talt-actors              basic   :offset-assert 180)
;    (~Ttransv-y                float   :offset-assert 184)
;    (~Tstart-y                 float   :offset-assert 188)
;    (~Tend-y                   float   :offset-assert 192)
;    (~Tdark-eco                uint32  :offset-assert 196)
;    )
;   :method-count-assert 22
;   :size-assert         #xc8
;   :flag-assert         #x16006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; puffer
; (deftype puffer (process-drawable)
;   ((~Tpath-index           int32             :offset-assert 176)
;    (~Tfacing-ry            float             :offset-assert 180)
;    (~Ttravel-ry            float             :offset-assert 184)
;    (~Ttravel-speed         float             :offset-assert 188)
;    (~Tattack-bottom-y      float             :offset-assert 192)
;    (~Tpatrol-bottom-y      float             :offset-assert 196)
;    (~Ttop-y                float             :offset-assert 200)
;    (~Ttarg-trans-y         float             :offset-assert 204)
;    (~Tacc-y                float             :offset-assert 208)
;    (~Ttravel-turn-speed    float             :offset-assert 212)
;    (~Tnotice-dist          float             :offset-assert 216)
;    (~Tgive-up-dist         float             :offset-assert 220)
;    (~Tattacking?           basic             :offset-assert 224)
;    (~Thit-player?          basic             :offset-assert 228)
;    (~Tlook-mean?           basic             :offset-assert 232)
;    (~Tcprims-type          uint64            :offset-assert 240)
;    (~Tneck                 basic             :offset-assert 248)
;    (~Thit-player-time      uint64            :offset-assert 256)
;    (~Treaction-delay       uint64            :offset-assert 264)
;    (~Tpicked-point-time    uint64            :offset-assert 272)
;    (~Tpick-new-point-delay uint64            :offset-assert 280)
;    (~Tlast-on-screen-time  uint64            :offset-assert 288)
;    (~Tbuddy                basic             :offset-assert 296)
;    (~Tnice-look            lod-set   :inline :offset-assert 300)
;    (~Tmean-look            lod-set   :inline :offset-assert 336)
;    (~Tdest-pos             vector    :inline :offset-assert 384)
;    (~Tsync                 sync-info :inline :offset-assert 400)
;    )
;   :method-count-assert 32
;   :size-assert         #x198
;   :flag-assert         #x2001300198
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; ;; puffer
; (deftype pick-patrol-point-away-from-buddy-work (structure)
;   ((best-path-index int32          :offset-assert 0)
;    (best-rating     float          :offset-assert 4)
;    (best-dest       vector :inline :offset-assert 16)
;    (pt-dir          vector :inline :offset-assert 32)
;    (buddy-dir       vector :inline :offset-assert 48)
;    (dest            vector :inline :offset-assert 64)
;    )
;   :method-count-assert 9
;   :size-assert         #x50
;   :flag-assert         #x900000050
;   )

; ;; sunken-fish
; (deftype sunkenfisha (process-drawable)
;   ((~Tpath-u                 float          :offset-assert 176)
;    (~Tpath-speed             float          :offset-assert 180)
;    (~Tpath-speed-seek-speed  float          :offset-assert 184)
;    (~Ttarg-path-speed        float          :offset-assert 188)
;    (~Tpath-normal-speed-lo   float          :offset-assert 192)
;    (~Tpath-normal-speed-hi   float          :offset-assert 196)
;    (~Tpath-dir               float          :offset-assert 200)
;    (~Tchange-path-dir-time   uint64         :offset-assert 208)
;    (~Tlocal-path-offset      vector :inline :offset-assert 224)
;    (~Ttarg-local-path-offset vector :inline :offset-assert 240)
;    (~Tlocal-path-offset-dir  vector :inline :offset-assert 256)
;    (~Tmax-local-path-offset  vector :inline :offset-assert 272)
;    (~Tfacing-rot             vector :inline :offset-assert 288)
;    (~Tpath-trans-offset      vector :inline :offset-assert 304)
;    )
;   :method-count-assert 28
;   :size-assert         #x140
;   :flag-assert         #x1c00d00140
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

; ;; rolling-obs
; (deftype rolling-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; rolling-obs
; (deftype rollingcam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; ;; rolling-obs
; (deftype pusher-base (process-drawable)
;   ((~Tmax-frame float  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype pusher (pusher-base)
;   ((~Tsync sync-info-paused :inline :offset-assert 180)
;    (~Tcyl  cylinder         :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xf8
;   :flag-assert         #x14009000f8
;   ;; inherited inspect of pusher-base
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype gorge-pusher (pusher-base)
;   ((~Tmin-frame float  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of pusher-base
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype dark-plant (process-drawable)
;   ((~Tnum-alts int32     :offset-assert 176)
;    (~Talts     UNKNOWN 4 :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xc4
;   :flag-assert         #x14006000c4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype happy-plant (process-drawable)
;   ((~Talt-actor basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype race-time (structure)
;   ((digit UNKNOWN 5 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x5
;   :flag-assert         #x900000005
;   )

; ;; rolling-obs
; (deftype rolling-start (process-drawable)
;   ((~Twhole-look  lod-set :inline :offset-assert 176)
;    (~Tbroken-look lod-set :inline :offset-assert 212)
;    )
;   :method-count-assert 20
;   :size-assert         #xf5
;   :flag-assert         #x14009000f5
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype gorge (process-drawable)
;   ((~Tcoord     matrix :inline :offset-assert 176)
;    (~Tradius    float          :offset-assert 240)
;    (~Tthickness float          :offset-assert 244)
;    )
;   :method-count-assert 20
;   :size-assert         #xf8
;   :flag-assert         #x14009000f8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype gorge-start (gorge)
;   ((~Ttasks            basic             :offset-assert 248)
;    (~Trecord-time      race-time :inline :offset-assert 252)
;    (~Tthis-time        race-time :inline :offset-assert 257)
;    (~Tstart-banner     uint64            :offset-assert 264)
;    (~Tend-banner       uint64            :offset-assert 272)
;    (~Ttimer-pos-offset int32             :offset-assert 280)
;    (~Tticker           ticky     :inline :offset-assert 288)
;    )
;   :method-count-assert 20
;   :size-assert         #x140
;   :flag-assert         #x1400d00140
;   ;; inherited inspect of gorge
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype gorge-finish (gorge)
;   ((~Talt-actor basic  :offset-assert 248)
;    )
;   :method-count-assert 20
;   :size-assert         #xfc
;   :flag-assert         #x14009000fc
;   ;; inherited inspect of gorge
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype gorge-abort (gorge)
;   ()
;   :method-count-assert 20
;   :size-assert         #xf8
;   :flag-assert         #x14009000f8
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-obs
; (deftype rolling-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; rolling-lightning-mole
; (deftype fleeing-nav-enemy-info (structure)
;   ((min-reflect-angle       float  :offset-assert 0)
;    (max-reflect-angle       float  :offset-assert 4)
;    (max-boundary-deflection float  :offset-assert 8)
;    (deflection-min-dist     float  :offset-assert 12)
;    (deflection-max-dist     float  :offset-assert 16)
;    (reflection-time         int32  :offset-assert 20)
;    (travel-rotate-speed     float  :offset-assert 24)
;    (blend_interp_angle      float  :offset-assert 28)
;    (min-speed-adjust        float  :offset-assert 32)
;    (max-speed-adjust        float  :offset-assert 36)
;    (speed-adjust-center     float  :offset-assert 40)
;    (speed-adjust-range      float  :offset-assert 44)
;    (abort-notice-distance   float  :offset-assert 48)
;    (min-notice-dist         float  :offset-assert 52)
;    (max-notice-dist         float  :offset-assert 56)
;    (min-stop-chase-dist     float  :offset-assert 60)
;    (max-stop-chase-dist     float  :offset-assert 64)
;    (max-flee-rotation       float  :offset-assert 68)
;    )
;   :method-count-assert 9
;   :size-assert         #x48
;   :flag-assert         #x900000048
;   )

; ;; rolling-lightning-mole
; (deftype fleeing-nav-enemy (nav-enemy)
;   ((~Tlast-reflection-time uint64                         :offset-assert 400)
;    (~Trun-blend-interp     float                          :offset-assert 408)
;    (~Tdesired-travel       vector                 :inline :offset-assert 416)
;    (~Tsaved-travel         vector                 :inline :offset-assert 432)
;    (~Tspeed-adjust         float                          :offset-assert 448)
;    (~Tflee-info            fleeing-nav-enemy-info :inline :offset-assert 452)
;    )
;   :method-count-assert 76
;   :size-assert         #x20c
;   :flag-assert         #x4c01a0020c
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; rolling-lightning-mole
; (deftype lightning-mole (fleeing-nav-enemy)
;   ((~Tdebug-vector vector :inline :offset-assert 528)
;    (~Talt-actor    basic          :offset-assert 544)
;    )
;   :method-count-assert 76
;   :size-assert         #x224
;   :flag-assert         #x4c01c00224
;   ;; inherited inspect of fleeing-nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; rolling-lightning-mole
; (deftype peeper (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-robber
; (deftype robber (process-drawable)
;   ((~Tcurve-position       float          :offset-assert 176)
;    (~Tspeed                float          :offset-assert 180)
;    (~Tfacing               vector :inline :offset-assert 192)
;    (~Ttangent              vector :inline :offset-assert 208)
;    (~Trun-blend-interp     float          :offset-assert 224)
;    (~Tnear-timer           int32          :offset-assert 228)
;    (~Tfar-time             uint64         :offset-assert 232)
;    (~Ty-offset             float          :offset-assert 240)
;    (~Ty-offset-desired     float          :offset-assert 244)
;    (~Ty-vel                float          :offset-assert 248)
;    (~Twater-height         float          :offset-assert 252)
;    (~Ttimeout              uint64         :offset-assert 256)
;    (~Tlast-ambient-time    uint64         :offset-assert 264)
;    (~Ttime-to-next-ambient uint64         :offset-assert 272)
;    )
;   :method-count-assert 20
;   :size-assert         #x118
;   :flag-assert         #x1400b00118
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; rolling-race-ring
; (deftype race-ring (process-drawable)
;   ((~Trot-y                 float                 :offset-assert 176)
;    (~Tface-vec              vector        :inline :offset-assert 192)
;    (~Tpart-track            uint64                :offset-assert 208)
;    (~Tkeep-part-track-alive basic                 :offset-assert 216)
;    (~Ttimeout               uint64                :offset-assert 224)
;    (~Talt-actor             basic                 :offset-assert 232)
;    (~Talt-task              uint8                 :offset-assert 236)
;    (~Tcyl                   cylinder-flat :inline :offset-assert 240)
;    (~Told-hips              vector        :inline :offset-assert 288)
;    )
;   :method-count-assert 20
;   :size-assert         #x130
;   :flag-assert         #x1400c00130
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; firecanyon-obs
; (deftype balloon (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; firecanyon-obs
; (deftype spike (process-drawable)
;   ((~Tnum-alts int32  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; firecanyon-obs
; (deftype crate-darkeco-cluster (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; ogre-part
; (deftype ogre-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

; ;; ogreboss
; (deftype ogreboss-missile (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; ;; ogreboss
; (deftype ogreboss-missile-init-data (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; ;; ogreboss
; (deftype ogreboss-super-boulder (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; ;; ogreboss
; (deftype ogreboss-bounce-boulder (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; ;; ogreboss
; (deftype ogreboss (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; ;; ogre-obs
; (deftype tntbarrel (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-plat (rigid-body-platform)
;   ((~Tanchor-point   vector :inline :offset-assert 736)
;    (~Tidle-y-offset  float          :offset-assert 752)
;    (~Tfloat-y-offset float          :offset-assert 756)
;    (~Tdelay          uint64         :offset-assert 760)
;    (~Tactive         basic          :offset-assert 768)
;    (~Ttriggered      basic          :offset-assert 772)
;    )
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-step (ogre-plat)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-step-a (ogre-step)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-step-b (ogre-step)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-step-c (ogre-step)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-step-d (ogre-step)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-isle (ogre-plat)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-isle-b (ogre-isle)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-isle-c (ogre-isle)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-isle-d (ogre-isle)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-bridge (process-drawable)
;   ((~Tjoint-mod-array  UNKNOWN 8 :offset-assert 176)
;    (~Tdead-joint-count int8      :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd1
;   :flag-assert         #x14007000d1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-bridgeend (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; ogre-obs
; (deftype ogre-lava (water-anim)
;   ((~Tidle-anim int32  :offset-assert 220)
;    (~Tanim      int32  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe4
;   :flag-assert         #x1e008000e4
;   ;; inherited inspect of water-anim
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; ogre-obs
; (deftype shortcut-boulder (process-drawable)
;   ((~Tbroken-look lod-set :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xd1
;   :flag-assert         #x14007000d1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; flying-lurker
; (deftype plunger-lurker (process-drawable)
;   ((~Talt-actor basic  :offset-assert 176)
;    (~Tgot-hit   basic  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; flying-lurker
; (deftype flying-lurker (process-drawable)
;   ((~Tcurve-position    float          :offset-assert 176)
;    (~Tspeed             float          :offset-assert 180)
;    (~Ttangent           vector :inline :offset-assert 192)
;    (~Tanim-blend        float          :offset-assert 208)
;    (~Ty-offset          float          :offset-assert 212)
;    (~Ty-offset-desired  float          :offset-assert 216)
;    (~Ty-vel             float          :offset-assert 220)
;    (~Tlast-look-time    uint64         :offset-assert 224)
;    (~Ttime-to-next-look uint64         :offset-assert 232)
;    (~Ttake-off          basic          :offset-assert 240)
;    (~Trace-seconds      float          :offset-assert 244)
;    (~Trace-start-time   uint64         :offset-assert 248)
;    (~Trank              int32          :offset-assert 256)
;    (~Talt-actor         basic          :offset-assert 260)
;    (~Talt-trans         vector         :offset-assert 264)
;    (~Tshadow-backup     basic          :offset-assert 268)
;    (~Ttry-count         uint8          :offset-assert 272)
;    (~Ttry-counted       basic          :offset-assert 276)
;    (~Tdefault-bounds    vector :inline :offset-assert 288)
;    )
;   :method-count-assert 21
;   :size-assert         #x130
;   :flag-assert         #x1500c00130
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; village3-part
; (deftype villagec-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

; ;; village3-obs
; (deftype villagec-lava (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; village3-obs
; (deftype gondola (process-drawable)
;   ((~Tanim           basic              :offset-assert 176)
;    (~Told-target-pos transformq :inline :offset-assert 192)
;    )
;   :method-count-assert 23
;   :size-assert         #xf0
;   :flag-assert         #x17008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; village3-obs
; (deftype pistons (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; village3-obs
; (deftype gondolacables (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; minecart
; (deftype minecartsteel (process-drawable)
;   ((~Tindex int32             :offset-assert 176)
;    (~Tanim  basic             :offset-assert 180)
;    (~Tsync  sync-info :inline :offset-assert 184)
;    )
;   :method-count-assert 21
;   :size-assert         #xc0
;   :flag-assert         #x15005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; miners
; (deftype minertall (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; miners
; (deftype minershort (process-taskable)
;   ((~Tother-miner basic  :offset-assert 380)
;    )
;   :method-count-assert 53
;   :size-assert         #x180
;   :flag-assert         #x3501100180
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; miners
; (deftype cavegem (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; assistant-village3
; (deftype assistant-villagec (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; sage-village3
; (deftype sage-villagec (process-taskable)
;   ((~Tevilbro   uint64  :offset-assert 384)
;    (~Tevilsis   uint64  :offset-assert 392)
;    (~Tassistant basic   :offset-assert 400)
;    )
;   :method-count-assert 53
;   :size-assert         #x194
;   :flag-assert         #x3501300194
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; ;; cave-trap
; (deftype cave-trap (process-drawable)
;   ((~Tspider-count    int32          :offset-assert 176)
;    (~Talt-actors      basic          :offset-assert 180)
;    (~Tspawn-delay     uint64         :offset-assert 184)
;    (~Tlast-spawn-time uint64         :offset-assert 192)
;    (~Tdebug-targ-pos  vector :inline :offset-assert 208)
;    )
;   :method-count-assert 21
;   :size-assert         #xe0
;   :flag-assert         #x15007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; cave-trap
; (deftype spider-vent (process-drawable)
;   ((~Tlast-spawn-time uint64  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; cave-trap
; (deftype spawn-baby-spider-best (structure)
;   ((index int32  :offset-assert 0)
;    (dist  float  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; cave-trap
; (deftype spawn-baby-spider-work (structure)
;   ((best UNKNOWN 4 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x40
;   :flag-assert         #x900000040
;   )

; ;; spider-egg
; (deftype spider-egg (process-drawable)
;   ((~Tnotify-actor basic           :offset-assert 176)
;    (~Tbroken-look  lod-set :inline :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xd5
;   :flag-assert         #x14007000d5
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; robocave-part
; (deftype robocave-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; target-snowball
; (deftype snowball-info (basic)
;   ((entity basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; ;; target-snowball
; (deftype snowball-bank (basic)
;   ()
;   :method-count-assert 9
;   :size-assert         #x4
;   :flag-assert         #x900000004
;   )

; ;; ice-cube
; (deftype ice-cube (nav-enemy)
;   ((~Tpart2                  basic          :offset-assert 400)
;    (~Tpart3                  basic          :offset-assert 404)
;    (~Tpart4                  basic          :offset-assert 408)
;    (~Ttrack-target?          basic          :offset-assert 412)
;    (~Tslow-down?             basic          :offset-assert 416)
;    (~Ttracking-player?       basic          :offset-assert 420)
;    (~Tforce-spawn-pt         int32          :offset-assert 424)
;    (~Tspeed                  float          :offset-assert 428)
;    (~Tanim-blend             float          :offset-assert 432)
;    (~Tprev-charge-angle-diff float          :offset-assert 436)
;    (~Tcharge-angle           float          :offset-assert 440)
;    (~Tground-y               float          :offset-assert 444)
;    (~Tcprims-type            uint64         :offset-assert 448)
;    (~Tnext-skid-sound-time   uint64         :offset-assert 456)
;    (~Tstarting-pos           vector :inline :offset-assert 464)
;    (~Ttarget-pt              vector :inline :offset-assert 480)
;    )
;   :method-count-assert 76
;   :size-assert         #x1f0
;   :flag-assert         #x4c018001f0
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; snow-ball
; (deftype snow-ball-shadow (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; snow-ball
; (deftype snow-ball-junction (structure)
;   ((enter-time uint64  :offset-assert 0)
;    (exit-time  uint64  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; ;; snow-ball
; (deftype snow-ball-path-info (structure)
;   ((hug-path? basic          :offset-assert 0)
;    (path-pos  vector :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; ;; snow-ball
; (deftype snow-ball-roller (process-drawable)
;   ((~Twhich-path             int32                       :offset-assert 176)
;    (~Tpath-u                 float                       :offset-assert 180)
;    (~Tpath-speed             float                       :offset-assert 184)
;    (~Tpath-length            float                       :offset-assert 188)
;    (~Tpath-fall-u            float                       :offset-assert 192)
;    (~Tpath-coming-out-u      float                       :offset-assert 196)
;    (~Tpath-faded-up-u        float                       :offset-assert 200)
;    (~Tdelay-til-bounce       int32                       :offset-assert 204)
;    (~Trolling-sound-id       uint32                      :offset-assert 208)
;    (~Trolling-sound-enabled? basic                       :offset-assert 212)
;    (~Tlast-bounce-time       uint64                      :offset-assert 216)
;    (~Thit-player-time        uint64                      :offset-assert 224)
;    (~Tpath-info              snow-ball-path-info :inline :offset-assert 240)
;    (~Tjunctions              UNKNOWN             4       :offset-assert 272)
;    )
;   :method-count-assert 23
;   :size-assert         #x150
;   :flag-assert         #x1700e00150
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; snow-ball
; (deftype snow-ball (process)
;   ((~Tstate-time             uint64    :offset-assert 112)
;    (~Tlast-path-picked       int32     :offset-assert 120)
;    (~Tsame-path-picked-count int32     :offset-assert 124)
;    (~Tdelay-til-next         int32     :offset-assert 128)
;    (~Tpath                   UNKNOWN 2 :offset-assert 132)
;    )
;   :method-count-assert 16
;   :size-assert         #x8c
;   :flag-assert         #x100020008c
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     )
;   )

; ;; snow-obs
; (deftype snowcam (pov-camera)
;   ((~Tseq uint64  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe8
;   :flag-assert         #x1e008000e8
;   ;; inherited inspect of pov-camera
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; snow-obs
; (deftype snow-eggtop (process-drawable)
;   ((~Tspawn-trans vector :inline :offset-assert 176)
;    (~Tplay-sound? basic          :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xc4
;   :flag-assert         #x14006000c4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; snow-obs
; (deftype snowpusher (process-drawable)
;   ((~Tmax-frame   float                    :offset-assert 176)
;    (~Topen-sound  uint128                  :offset-assert 192)
;    (~Tclose-sound uint128                  :offset-assert 208)
;    (~Tsync        sync-info-paused :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; snow-obs
; (deftype snow-spatula (baseplat)
;   ((~Tsync     sync-info :inline :offset-assert 228)
;    (~Tstartmat matrix    :inline :offset-assert 240)
;    )
;   :method-count-assert 27
;   :size-assert         #x130
;   :flag-assert         #x1b00c00130
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; ;; snow-obs
; (deftype snow-fort-gate (process-drawable)
;   ((~Tpart2        basic          :offset-assert 176)
;    (~Tpart3        basic          :offset-assert 180)
;    (~Topen-trans   vector :inline :offset-assert 192)
;    (~Tclosed-trans vector :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; snow-obs
; (deftype snow-gears (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; snow-obs
; (deftype snow-switch (process-drawable)
;   ((~Tpressed?     basic          :offset-assert 176)
;    (~Tfcell-handle uint64         :offset-assert 184)
;    (~Torig-trans   vector :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; snow-obs
; (deftype snow-log (process-drawable)
;   ((~Tmaster basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; snow-obs
; (deftype snow-log-button (process-drawable)
;   ((~Tlog        basic          :offset-assert 176)
;    (~Torig-trans vector :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; snow-flutflut-obs
; (deftype flutflut-plat (plat)
;   ((~Thas-path?           basic              :offset-assert 264)
;    (~Tplat-type           int32              :offset-assert 268)
;    (~Trise-time           int32              :offset-assert 272)
;    (~Tfall-time           int32              :offset-assert 276)
;    (~Tpart-ry             float              :offset-assert 280)
;    (~Tsync-starting-val   float              :offset-assert 284)
;    (~Tflutflut-button     basic              :offset-assert 288)
;    (~Tappear-trans-top    vector     :inline :offset-assert 304)
;    (~Tappear-trans-bottom vector     :inline :offset-assert 320)
;    (~Tappear-quat-top     quaternion :inline :offset-assert 336)
;    (~Tappear-quat-bottom  quaternion :inline :offset-assert 352)
;    (~Tstart-trans         vector     :inline :offset-assert 368)
;    )
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;; inherited inspect of plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; snow-flutflut-obs
; (deftype snow-button (process-drawable)
;   ((~Twiggled?         basic          :offset-assert 176)
;    (~Ttimeout          uint64         :offset-assert 184)
;    (~Tdelay-til-wiggle uint64         :offset-assert 192)
;    (~Tprev-button      basic          :offset-assert 200)
;    (~Tticker           ticky  :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; snow-flutflut-obs
; (deftype flutflut-plat-small (flutflut-plat)
;   ()
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; snow-flutflut-obs
; (deftype flutflut-plat-med (flutflut-plat)
;   ()
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; snow-flutflut-obs
; (deftype flutflut-plat-large (flutflut-plat)
;   ()
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; ;; snow-bumper
; (deftype snow-bumper (process-drawable)
;   ((~Tbumper-id               int32   :offset-assert 176)
;    (~Tbase-shove-ry           float   :offset-assert 180)
;    (~Tmax-shove-diff-ry       float   :offset-assert 184)
;    (~Tpart2                   basic   :offset-assert 188)
;    (~Tlast-shoved-player-time uint64  :offset-assert 192)
;    )
;   :method-count-assert 22
;   :size-assert         #xc8
;   :flag-assert         #x16006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; snow-ram-h
; (deftype ram (process-drawable)
;   ((~Tram-id              int32          :offset-assert 176)
;    (~Tgive-fuel-cell?     basic          :offset-assert 180)
;    (~Tgive-fuel-cell-anim basic          :offset-assert 184)
;    (~Tpart2               basic          :offset-assert 188)
;    (~Torient-ry           float          :offset-assert 192)
;    (~Tfuel-cell-dest-pos  vector :inline :offset-assert 208)
;    )
;   :method-count-assert 23
;   :size-assert         #xe0
;   :flag-assert         #x17007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; ;; snow-ram-boss
; (deftype ram-boss-proj (projectile)
;   ((~Tpart2           basic          :offset-assert 412)
;    (~Tlaunched?       basic          :offset-assert 416)
;    (~Tgrowth          float          :offset-assert 420)
;    (~Tcharge-sound-id uint32         :offset-assert 424)
;    (~Tlaunch-time     uint64         :offset-assert 432)
;    (~Tfacing-dir      vector :inline :offset-assert 448)
;    )
;   :method-count-assert 29
;   :size-assert         #x1d0
;   :flag-assert         #x1d016001d0
;   ;; inherited inspect of projectile
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; ;; snow-ram-boss
; (deftype ram-boss (nav-enemy)
;   ((~Tfacing-y                 float          :offset-assert 400)
;    (~Tplayer-dir-y             float          :offset-assert 404)
;    (~Tlast-turn-speed          float          :offset-assert 408)
;    (~Tfrustration              int32          :offset-assert 412)
;    (~Tdead?                    basic          :offset-assert 416)
;    (~Thas-shield?              basic          :offset-assert 420)
;    (~Tproj-stoked              basic          :offset-assert 424)
;    (~Tproj-status              uint64         :offset-assert 432)
;    (~Tpart2                    basic          :offset-assert 440)
;    (~Tproj-last-thrown-time    uint64         :offset-assert 448)
;    (~Tnav-enemy-patrol-timeout uint64         :offset-assert 456)
;    (~Tproj-launch-vec          vector :inline :offset-assert 464)
;    (~Tlocal-throw-point        vector :inline :offset-assert 480)
;    (~Tshield-jmod              basic          :offset-assert 496)
;    )
;   :method-count-assert 76
;   :size-assert         #x1f4
;   :flag-assert         #x4c019001f4
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; snow-part
; (deftype snow-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; ;; yeti
; (deftype yeti-slave (nav-enemy)
;   ((~Tground-y float  :offset-assert 400)
;    (~Tpart2    basic  :offset-assert 404)
;    )
;   :method-count-assert 76
;   :size-assert         #x198
;   :flag-assert         #x4c01300198
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; ;; yeti
; (deftype yeti (process-drawable)
;   ((~Tdesired-num-children  int32   :offset-assert 176)
;    (~Tspawn-delay           int32   :offset-assert 180)
;    (~Tfirst-time-spawn-dist float   :offset-assert 184)
;    (~Tstate-time            uint64  :offset-assert 168)
;    )
;   :method-count-assert 22
;   :size-assert         #xc8
;   :flag-assert         #x16006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; lavatube-obs
; (deftype lavabase (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-obs
; (deftype lavafall (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-obs
; (deftype lavashortcut (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-obs
; (deftype darkecobarrel-leak (structure)
;   ((offset      vector :inline :offset-assert 0)
;    (first-frame basic          :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x14
;   :flag-assert         #x900000014
;   )

; ;; lavatube-obs
; (deftype darkecobarrel-base (process-drawable)
;   ((~Tspeed float   :offset-assert 176)
;    (~Tsync  uint64  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-obs
; (deftype darkecobarrel-mover (darkecobarrel-base)
;   ((~Tstart-time   uint64                      :offset-assert 192)
;    (~Thits         int32                       :offset-assert 200)
;    (~Tleak         UNKNOWN             1       :offset-assert 208)
;    (~Ty-offset     bouncing-float      :inline :offset-assert 240)
;    (~Ty-offset-tgt delayed-rand-float  :inline :offset-assert 280)
;    (~Tdown         oscillating-vector  :inline :offset-assert 320)
;    (~Tdown-tgt     delayed-rand-vector :inline :offset-assert 384)
;    )
;   :method-count-assert 20
;   :size-assert         #x1b0
;   :flag-assert         #x14014001b0
;   ;; inherited inspect of darkecobarrel-base
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-obs
; (deftype darkecobarrel (darkecobarrel-base)
;   ((~Tspawn-array basic  :offset-assert 192)
;    (~Tcur-spawn   int32  :offset-assert 196)
;    )
;   :method-count-assert 20
;   :size-assert         #xc8
;   :flag-assert         #x14006000c8
;   ;; inherited inspect of darkecobarrel-base
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-obs
; (deftype lavafallsewera (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-obs
; (deftype lavafallsewerb (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-obs
; (deftype chainmine (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; lavatube-obs
; (deftype lavaballoon (process-drawable)
;   ((~Tmove-per-tick float  :offset-assert 176)
;    )
;   :method-count-assert 22
;   :size-assert         #xb4
;   :flag-assert         #x16005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; ;; lavatube-obs
; (deftype lavatube-lava (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; ;; lavatube-obs
; (deftype lavayellowtarp (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-energy
; (deftype energydoor (process-drawable)
;   ((~Talt-actor basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-energy
; (deftype energybase (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-energy
; (deftype energyhub (process-drawable)
;   ((~Talts                  UNKNOWN            3       :offset-assert 176)
;    (~Tarm                   UNKNOWN            5       :offset-assert 192)
;    (~Trot-mat               matrix             :inline :offset-assert 240)
;    (~Trot-mat-init          matrix             :inline :offset-assert 304)
;    (~Trotation-speed        oscillating-float  :inline :offset-assert 368)
;    (~Trotation-speed-offset delayed-rand-float :inline :offset-assert 392)
;    (~Ty-rotation            float                      :offset-assert 420)
;    (~Tx-rotation            float                      :offset-assert 424)
;    (~Tpalette-val           float                      :offset-assert 428)
;    )
;   :method-count-assert 20
;   :size-assert         #x1b0
;   :flag-assert         #x14014001b0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-energy
; (deftype energyarm (process-drawable)
;   ((~Toffset             vector             :inline :offset-assert 176)
;    (~Ty-rotation         float                      :offset-assert 192)
;    (~Ty-chatter-rotation bouncing-float     :inline :offset-assert 196)
;    (~Ty-chatter-min      delayed-rand-float :inline :offset-assert 240)
;    (~Tx-rotation         bouncing-float     :inline :offset-assert 268)
;    (~Tx-fall-rotation    bouncing-float     :inline :offset-assert 308)
;    (~Trot-mat            matrix             :inline :offset-assert 352)
;    (~Tball               uint64                     :offset-assert 416)
;    (~Tx-correction       float                      :offset-assert 424)
;    )
;   :method-count-assert 20
;   :size-assert         #x1ac
;   :flag-assert         #x14014001ac
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-energy
; (deftype energyball (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-energy
; (deftype energylava (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; ;; lavatube-part
; (deftype lavatube-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

; ;; assistant-lavatube
; (deftype assistant-lavatube-start (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; title-obs
(deftype logo (process-drawable)
  ((~Tcamera      uint64  :offset-assert 176)
   (~Tcamera-anim uint64  :offset-assert 184)
   (~Tvolumes     uint64  :offset-assert 192)
   (~Tblack       uint64  :offset-assert 200)
   (~Ttarget      uint64  :offset-assert 208)
   (~Tsidekick    uint64  :offset-assert 216)
   (~Tmain-joint  basic   :offset-assert 224)
   (~Tanim        basic   :offset-assert 228)
   (~Tnext-anim   basic   :offset-assert 232)
   (~Tdone?       basic   :offset-assert 236)
   )
  :heap-base #x80
  :method-count-assert 24
  :size-assert         #xf0
  :flag-assert         #x18008000f0
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    )
  )

;; title-obs
(deftype logo-slave (process-drawable)
  ((~Tmain-joint basic  :offset-assert 176)
   )
  :heap-base #x50
  :method-count-assert 21
  :size-assert         #xb4
  :flag-assert         #x15005000b4
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    )
  )

; ;; lava
; (deftype lava (water-anim)
;   ()
;   :method-count-assert 28
;   :size-assert         #xd0
;   :flag-assert         #x1c006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )